//
//  HYChainView.m
//  HYCloudChain_Example
//
//  Created by 王玉 on 2019/4/29.
//  Copyright © 2019 wangyu1001@live.cn. All rights reserved.
//

#import "HYChainView.h"
#import <HYDefine/HYDefine.h>

@implementation HYChainView

//- (void)drawRect:(CGRect)rect {
//
//    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(viewClick)];
//    [self addGestureRecognizer:tap];
//}

- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event{
    //获取触摸点的集合
    NSSet * allTouches = [event allTouches];
    //获取触摸对象
    UITouch * touch = [allTouches anyObject];
    //返回触摸点所在视图中的坐标
    CGPoint point = [touch locationInView:[touch view]];
    __block NSString *index = nil;
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    dispatch_group_t group = dispatch_group_create();
    
    dispatch_group_enter(group);
    dispatch_async(queue, ^{
        [_array1 enumerateObjectsUsingBlock:^(NSValue * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
            if (CGRectContainsPoint([obj CGRectValue], point)) {
                index = [@(idx) stringValue];
                *stop = YES;
            }
        }];
            dispatch_group_leave(group);
    });
    
    //一直等待完成
    dispatch_group_wait(group, DISPATCH_TIME_FOREVER);
    
    //任务3
    uWeakSelf
    if (index) {
        dispatch_group_notify(group, dispatch_get_main_queue(), ^{
            NSString *str = _array2[[index integerValue]];
            [weakSelf viewClickWithStr:str];
        });
    }
    
    
    
}

- (void)viewClickWithStr:(NSString *)str{
    
}



- (void)drawRect:(CGRect)rect {

    _array1 = [[NSMutableArray alloc]init];
    _array2 = [[NSMutableArray alloc]init];
  
   
    // This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
    // http://www.paintcodeapp.com
    
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Color Declarations
    UIColor* strokeColor = [UIColor colorWithRed: 0.753 green: 0 blue: 0 alpha: 1];
    UIColor* fillColor = [UIColor colorWithRed: 0.753 green: 0 blue: 0 alpha: 1];
    UIColor* textForeground = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    UIColor* fillColor2 = [UIColor colorWithRed: 0.498 green: 0.498 blue: 0.498 alpha: 1];
    UIColor* fillColor3 = [UIColor colorWithRed: 0.749 green: 0 blue: 0.031 alpha: 1];
    UIColor* strokeColor2 = [UIColor colorWithRed: 0.749 green: 0 blue: 0.031 alpha: 1];
    UIColor* fillColor4 = [UIColor colorWithRed: 0.929 green: 0.49 blue: 0.192 alpha: 1];
    UIColor* fillColor5 = [UIColor colorWithRed: 0.749 green: 0.749 blue: 0.749 alpha: 1];
    UIColor* textForeground2 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    
    //// Label 29 Drawing
    CGRect label29Rect = CGRectMake(509.35, 10, 85.76, 16);
    {
        NSString* textContent = @"集成电路产业链";
        NSMutableParagraphStyle* label29Style = [[NSMutableParagraphStyle alloc] init];
        label29Style.alignment = NSTextAlignmentCenter;
        NSDictionary* label29FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 12], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label29Style};
        
        CGFloat label29TextHeight = [textContent boundingRectWithSize: CGSizeMake(label29Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label29FontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, label29Rect);
        [textContent drawInRect: CGRectMake(CGRectGetMinX(label29Rect), CGRectGetMinY(label29Rect) + (label29Rect.size.height - label29TextHeight) / 2, label29Rect.size.width, label29TextHeight) withAttributes: label29FontAttributes];
        CGContextRestoreGState(context);
        [_array1 addObject:[NSValue valueWithCGRect:label29Rect]];
        [_array2 addObject:textContent];
    }
    
    
    //// Group 2
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(215, 97, 85, 34)];
        [fillColor setFill];
        [rectanglePath fill];
        [strokeColor setStroke];
        rectanglePath.lineWidth = 2;
        [rectanglePath stroke];
        
        
        //// Label Drawing
        CGRect labelRect = CGRectMake(246.64, 107, 22.48, 14);
        {
            NSString* textContent = @"液晶";
            NSMutableParagraphStyle* labelStyle = [[NSMutableParagraphStyle alloc] init];
            labelStyle.alignment = NSTextAlignmentCenter;
            NSDictionary* labelFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: labelStyle};
            
            CGFloat labelTextHeight = [textContent boundingRectWithSize: CGSizeMake(labelRect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: labelFontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, labelRect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(labelRect), CGRectGetMinY(labelRect) + (labelRect.size.height - labelTextHeight) / 2, labelRect.size.width, labelTextHeight) withAttributes: labelFontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 3 Drawing
        UIBezierPath* rectangle3Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(198, 91, 234, 442) cornerRadius: 3.8];
        [strokeColor setStroke];
        rectangle3Path.lineWidth = 2;
        [rectangle3Path setLineDash: (CGFloat[]){76200, 25400} count: 2 phase: 0];
        [rectangle3Path stroke];
        
        
        //// Rectangle 4 Drawing
        UIBezierPath* rectangle4Path = [UIBezierPath bezierPathWithRect: CGRectMake(332, 179, 85, 34)];
        [fillColor setFill];
        [rectangle4Path fill];
        [strokeColor setStroke];
        rectangle4Path.lineWidth = 2;
        [rectangle4Path setLineDash: (CGFloat[]){76200, 25400} count: 2 phase: 0];
        [rectangle4Path stroke];
        
        
        //// Label 2 Drawing
        CGRect label2Rect = CGRectMake(352.47, 190, 44.97, 14);
        {
            NSString* textContent = @"玻璃基板";
            NSMutableParagraphStyle* label2Style = [[NSMutableParagraphStyle alloc] init];
            label2Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label2FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label2Style};
            
            CGFloat label2TextHeight = [textContent boundingRectWithSize: CGSizeMake(label2Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label2FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label2Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label2Rect), CGRectGetMinY(label2Rect) + (label2Rect.size.height - label2TextHeight) / 2, label2Rect.size.width, label2TextHeight) withAttributes: label2FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 6 Drawing
        UIBezierPath* rectangle6Path = [UIBezierPath bezierPathWithRect: CGRectMake(464, 108, 80, 70)];
        [fillColor setFill];
        [rectangle6Path fill];
        [strokeColor setStroke];
        rectangle6Path.lineWidth = 2;
        [rectangle6Path stroke];
        
        
        //// Label 3 Drawing
        CGRect label3Rect = CGRectMake(482.2, 123, 44.97, 14);
        {
            NSString* textContent = @"液晶面板";
            NSMutableParagraphStyle* label3Style = [[NSMutableParagraphStyle alloc] init];
            label3Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label3FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label3Style};
            
            CGFloat label3TextHeight = [textContent boundingRectWithSize: CGSizeMake(label3Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label3FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label3Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label3Rect), CGRectGetMinY(label3Rect) + (label3Rect.size.height - label3TextHeight) / 2, label3Rect.size.width, label3TextHeight) withAttributes: label3FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 4 Drawing
        CGRect label4Rect = CGRectMake(482.2, 136, 44.97, 14);
        {
            NSString* textContent = @"（陈列、";
            NSMutableParagraphStyle* label4Style = [[NSMutableParagraphStyle alloc] init];
            label4Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label4FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label4Style};
            
            CGFloat label4TextHeight = [textContent boundingRectWithSize: CGSizeMake(label4Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label4FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label4Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label4Rect), CGRectGetMinY(label4Rect) + (label4Rect.size.height - label4TextHeight) / 2, label4Rect.size.width, label4TextHeight) withAttributes: label4FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 5 Drawing
        CGRect label5Rect = CGRectMake(487.7, 149, 33.73, 14);
        {
            NSString* textContent = @"成盒）";
            NSMutableParagraphStyle* label5Style = [[NSMutableParagraphStyle alloc] init];
            label5Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label5FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label5Style};
            
            CGFloat label5TextHeight = [textContent boundingRectWithSize: CGSizeMake(label5Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label5FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label5Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label5Rect), CGRectGetMinY(label5Rect) + (label5Rect.size.height - label5TextHeight) / 2, label5Rect.size.width, label5TextHeight) withAttributes: label5FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 10 Drawing
        UIBezierPath* rectangle10Path = [UIBezierPath bezierPathWithRect: CGRectMake(464, 185, 80, 72)];
        [fillColor setFill];
        [rectangle10Path fill];
        [strokeColor setStroke];
        rectangle10Path.lineWidth = 2;
        [rectangle10Path stroke];
        
        
        //// Label 6 Drawing
        CGRect label6Rect = CGRectMake(483.42, 188, 15.03, 14);
        {
            NSString* textContent = @"On";
            NSMutableParagraphStyle* label6Style = [[NSMutableParagraphStyle alloc] init];
            label6Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label6FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label6Style};
            
            CGFloat label6TextHeight = [textContent boundingRectWithSize: CGSizeMake(label6Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label6FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label6Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label6Rect), CGRectGetMinY(label6Rect) + (label6Rect.size.height - label6TextHeight) / 2, label6Rect.size.width, label6TextHeight) withAttributes: label6FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 7 Drawing
        CGRect label7Rect = CGRectMake(499.17, 188, 5.25, 14);
        {
            NSString* textContent = @"-";
            NSMutableParagraphStyle* label7Style = [[NSMutableParagraphStyle alloc] init];
            label7Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label7FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label7Style};
            
            CGFloat label7TextHeight = [textContent boundingRectWithSize: CGSizeMake(label7Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label7FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label7Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label7Rect), CGRectGetMinY(label7Rect) + (label7Rect.size.height - label7TextHeight) / 2, label7Rect.size.width, label7TextHeight) withAttributes: label7FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 8 Drawing
        CGRect label8Rect = CGRectMake(503.92, 188, 19.96, 14);
        {
            NSString* textContent = @"Cell";
            NSMutableParagraphStyle* label8Style = [[NSMutableParagraphStyle alloc] init];
            label8Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label8FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label8Style};
            
            CGFloat label8TextHeight = [textContent boundingRectWithSize: CGSizeMake(label8Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label8FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label8Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label8Rect), CGRectGetMinY(label8Rect) + (label8Rect.size.height - label8TextHeight) / 2, label8Rect.size.width, label8TextHeight) withAttributes: label8FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 9 Drawing
        CGRect label9Rect = CGRectMake(476.42, 201, 56.21, 14);
        {
            NSString* textContent = @"（蒸镀机、";
            NSMutableParagraphStyle* label9Style = [[NSMutableParagraphStyle alloc] init];
            label9Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label9FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label9Style};
            
            CGFloat label9TextHeight = [textContent boundingRectWithSize: CGSizeMake(label9Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label9FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label9Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label9Rect), CGRectGetMinY(label9Rect) + (label9Rect.size.height - label9TextHeight) / 2, label9Rect.size.width, label9TextHeight) withAttributes: label9FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 10 Drawing
        CGRect label10Rect = CGRectMake(481.36, 214, 44.97, 14);
        {
            NSString* textContent = @"镀膜、矩";
            NSMutableParagraphStyle* label10Style = [[NSMutableParagraphStyle alloc] init];
            label10Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label10FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label10Style};
            
            CGFloat label10TextHeight = [textContent boundingRectWithSize: CGSizeMake(label10Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label10FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label10Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label10Rect), CGRectGetMinY(label10Rect) + (label10Rect.size.height - label10TextHeight) / 2, label10Rect.size.width, label10TextHeight) withAttributes: label10FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 11 Drawing
        CGRect label11Rect = CGRectMake(477.61, 227, 22.48, 14);
        {
            NSString* textContent = @"阵、";
            NSMutableParagraphStyle* label11Style = [[NSMutableParagraphStyle alloc] init];
            label11Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label11FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label11Style};
            
            CGFloat label11TextHeight = [textContent boundingRectWithSize: CGSizeMake(label11Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label11FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label11Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label11Rect), CGRectGetMinY(label11Rect) + (label11Rect.size.height - label11TextHeight) / 2, label11Rect.size.width, label11TextHeight) withAttributes: label11FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 12 Drawing
        CGRect label12Rect = CGRectMake(499.61, 227, 18.27, 14);
        {
            NSString* textContent = @"ITO";
            NSMutableParagraphStyle* label12Style = [[NSMutableParagraphStyle alloc] init];
            label12Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label12FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label12Style};
            
            CGFloat label12TextHeight = [textContent boundingRectWithSize: CGSizeMake(label12Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label12FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label12Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label12Rect), CGRectGetMinY(label12Rect) + (label12Rect.size.height - label12TextHeight) / 2, label12Rect.size.width, label12TextHeight) withAttributes: label12FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 13 Drawing
        CGRect label13Rect = CGRectMake(518.11, 227, 11.24, 14);
        {
            NSString* textContent = @"、";
            NSMutableParagraphStyle* label13Style = [[NSMutableParagraphStyle alloc] init];
            label13Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label13FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label13Style};
            
            CGFloat label13TextHeight = [textContent boundingRectWithSize: CGSizeMake(label13Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label13FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label13Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label13Rect), CGRectGetMinY(label13Rect) + (label13Rect.size.height - label13TextHeight) / 2, label13Rect.size.width, label13TextHeight) withAttributes: label13FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 14 Drawing
        CGRect label14Rect = CGRectMake(486.86, 240, 33.73, 14);
        {
            NSString* textContent = @"切割）";
            NSMutableParagraphStyle* label14Style = [[NSMutableParagraphStyle alloc] init];
            label14Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label14FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label14Style};
            
            CGFloat label14TextHeight = [textContent boundingRectWithSize: CGSizeMake(label14Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label14FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label14Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label14Rect), CGRectGetMinY(label14Rect) + (label14Rect.size.height - label14TextHeight) / 2, label14Rect.size.width, label14TextHeight) withAttributes: label14FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(300, 113)];
        [bezierPath addLineToPoint: CGPointMake(383.04, 113)];
        [bezierPath addLineToPoint: CGPointMake(383.04, 142.69)];
        [bezierPath addLineToPoint: CGPointMake(382.04, 141.69)];
        [bezierPath addLineToPoint: CGPointMake(462.09, 141.69)];
        [bezierPath addLineToPoint: CGPointMake(462.09, 143.69)];
        [bezierPath addLineToPoint: CGPointMake(381.04, 143.69)];
        [bezierPath addLineToPoint: CGPointMake(381.04, 114)];
        [bezierPath addLineToPoint: CGPointMake(382.04, 115)];
        [bezierPath addLineToPoint: CGPointMake(300, 115)];
        [bezierPath addLineToPoint: CGPointMake(300, 113)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(456.6, 138.32)];
        [bezierPath addLineToPoint: CGPointMake(464.08, 142.69)];
        [bezierPath addLineToPoint: CGPointMake(456.6, 147.05)];
        [bezierPath addCurveToPoint: CGPointMake(455.23, 146.69) controlPoint1: CGPointMake(456.12, 147.33) controlPoint2: CGPointMake(455.51, 147.17)];
        [bezierPath addCurveToPoint: CGPointMake(455.59, 145.32) controlPoint1: CGPointMake(454.95, 146.21) controlPoint2: CGPointMake(455.11, 145.6)];
        [bezierPath addLineToPoint: CGPointMake(461.59, 141.82)];
        [bezierPath addLineToPoint: CGPointMake(461.59, 143.55)];
        [bezierPath addLineToPoint: CGPointMake(455.59, 140.05)];
        [bezierPath addCurveToPoint: CGPointMake(455.23, 138.68) controlPoint1: CGPointMake(455.11, 139.77) controlPoint2: CGPointMake(454.95, 139.16)];
        [bezierPath addCurveToPoint: CGPointMake(456.6, 138.32) controlPoint1: CGPointMake(455.51, 138.21) controlPoint2: CGPointMake(456.12, 138.04)];
        [bezierPath closePath];
        [fillColor4 setFill];
        [bezierPath fill];
        
        
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
        [bezier2Path moveToPoint: CGPointMake(417, 197.51)];
        [bezier2Path addLineToPoint: CGPointMake(441.62, 197.51)];
        [bezier2Path addLineToPoint: CGPointMake(441.62, 143)];
        [bezier2Path addLineToPoint: CGPointMake(440.62, 144)];
        [bezier2Path addLineToPoint: CGPointMake(462.26, 144)];
        [bezier2Path addLineToPoint: CGPointMake(462.26, 142)];
        [bezier2Path addLineToPoint: CGPointMake(439.62, 142)];
        [bezier2Path addLineToPoint: CGPointMake(439.62, 196.51)];
        [bezier2Path addLineToPoint: CGPointMake(440.62, 195.51)];
        [bezier2Path addLineToPoint: CGPointMake(417, 195.51)];
        [bezier2Path addLineToPoint: CGPointMake(417, 197.51)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(456.77, 147.36)];
        [bezier2Path addLineToPoint: CGPointMake(464.25, 143)];
        [bezier2Path addLineToPoint: CGPointMake(456.77, 138.64)];
        [bezier2Path addCurveToPoint: CGPointMake(455.4, 139) controlPoint1: CGPointMake(456.29, 138.36) controlPoint2: CGPointMake(455.68, 138.52)];
        [bezier2Path addCurveToPoint: CGPointMake(455.76, 140.36) controlPoint1: CGPointMake(455.12, 139.47) controlPoint2: CGPointMake(455.28, 140.09)];
        [bezier2Path addLineToPoint: CGPointMake(461.76, 143.86)];
        [bezier2Path addLineToPoint: CGPointMake(461.76, 142.14)];
        [bezier2Path addLineToPoint: CGPointMake(455.76, 145.64)];
        [bezier2Path addCurveToPoint: CGPointMake(455.4, 147) controlPoint1: CGPointMake(455.28, 145.91) controlPoint2: CGPointMake(455.12, 146.53)];
        [bezier2Path addCurveToPoint: CGPointMake(456.77, 147.36) controlPoint1: CGPointMake(455.68, 147.48) controlPoint2: CGPointMake(456.29, 147.64)];
        [bezier2Path closePath];
        [fillColor4 setFill];
        [bezier2Path fill];
        
        
        //// Group 3
        {
            //// Rectangle 20 Drawing
            UIBezierPath* rectangle20Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(440, 91, 385, 564) cornerRadius: 6.2];
            [strokeColor setStroke];
            rectangle20Path.lineWidth = 2;
            [rectangle20Path setLineDash: (CGFloat[]){76200, 25400} count: 2 phase: 0];
            [rectangle20Path stroke];
        }
        
        
        //// Rectangle 21 Drawing
        UIBezierPath* rectangle21Path = [UIBezierPath bezierPathWithRect: CGRectMake(592, 120, 85, 34)];
        [fillColor setFill];
        [rectangle21Path fill];
        [strokeColor setStroke];
        rectangle21Path.lineWidth = 2;
        [rectangle21Path setLineDash: (CGFloat[]){76200, 25400} count: 2 phase: 0];
        [rectangle21Path stroke];
        
        
        //// Group
        {
            //// Label 15 Drawing
            CGRect label15Rect = CGRectMake(602.76, 124, 65.48, 26);
            {
                NSString* textContent = @"薄化/镀膜/黄光/切割";
                NSMutableParagraphStyle* label15Style = [[NSMutableParagraphStyle alloc] init];
                label15Style.alignment = NSTextAlignmentCenter;
                NSDictionary* label15FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label15Style};
                
                CGFloat label15TextHeight = [textContent boundingRectWithSize: CGSizeMake(label15Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label15FontAttributes context: nil].size.height;
                CGContextSaveGState(context);
                CGContextClipToRect(context, label15Rect);
                [textContent drawInRect: CGRectMake(CGRectGetMinX(label15Rect), CGRectGetMinY(label15Rect) + (label15Rect.size.height - label15TextHeight) / 2, label15Rect.size.width, label15TextHeight) withAttributes: label15FontAttributes];
                CGContextRestoreGState(context);
            }
        }
        
        
        //// Rectangle 29 Drawing
        UIBezierPath* rectangle29Path = [UIBezierPath bezierPathWithRect: CGRectMake(593, 206, 85, 34)];
        [fillColor setFill];
        [rectangle29Path fill];
        [strokeColor setStroke];
        rectangle29Path.lineWidth = 2;
        [rectangle29Path stroke];
        
        
        //// Label 22 Drawing
        CGRect label22Rect = CGRectMake(613.13, 216, 44.97, 14);
        {
            NSString* textContent = @"二次强化";
            NSMutableParagraphStyle* label22Style = [[NSMutableParagraphStyle alloc] init];
            label22Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label22FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label22Style};
            
            CGFloat label22TextHeight = [textContent boundingRectWithSize: CGSizeMake(label22Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label22FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label22Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label22Rect), CGRectGetMinY(label22Rect) + (label22Rect.size.height - label22TextHeight) / 2, label22Rect.size.width, label22TextHeight) withAttributes: label22FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 31 Drawing
        UIBezierPath* rectangle31Path = [UIBezierPath bezierPathWithRect: CGRectMake(722, 182, 98, 58)];
        [fillColor setFill];
        [rectangle31Path fill];
        [strokeColor setStroke];
        rectangle31Path.lineWidth = 2;
        [rectangle31Path stroke];
        
        
        //// Label 26 Drawing
        CGRect label26Rect = CGRectMake(727, 190, 86, 42);
        {
            NSString* textContent = @"TFT-FCD显示模组显示触控模组";
            NSMutableParagraphStyle* label26Style = [[NSMutableParagraphStyle alloc] init];
            label26Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label26FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label26Style};
            
            CGFloat label26TextHeight = [textContent boundingRectWithSize: CGSizeMake(label26Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label26FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label26Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label26Rect), CGRectGetMinY(label26Rect) + (label26Rect.size.height - label26TextHeight) / 2, label26Rect.size.width, label26TextHeight) withAttributes: label26FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 37 Drawing
        UIBezierPath* rectangle37Path = [UIBezierPath bezierPathWithRect: CGRectMake(592, 391, 85, 34)];
        [fillColor setFill];
        [rectangle37Path fill];
        [strokeColor setStroke];
        rectangle37Path.lineWidth = 2;
        [rectangle37Path stroke];
        
        
        //// Label 28 Drawing
        CGRect label28Rect = CGRectMake(618.39, 402, 33.73, 14);
        {
            NSString* textContent = @"偏光片";
            NSMutableParagraphStyle* label28Style = [[NSMutableParagraphStyle alloc] init];
            label28Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label28FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label28Style};
            
            CGFloat label28TextHeight = [textContent boundingRectWithSize: CGSizeMake(label28Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label28FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label28Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label28Rect), CGRectGetMinY(label28Rect) + (label28Rect.size.height - label28TextHeight) / 2, label28Rect.size.width, label28TextHeight) withAttributes: label28FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 39 Drawing
        UIBezierPath* rectangle39Path = [UIBezierPath bezierPathWithRect: CGRectMake(592, 473, 85, 34)];
        [fillColor setFill];
        [rectangle39Path fill];
        [strokeColor setStroke];
        rectangle39Path.lineWidth = 2;
        [rectangle39Path stroke];
        
        
        //// Label 30 Drawing
        CGRect label30Rect = CGRectMake(618.34, 483, 22.48, 14);
        {
            NSString* textContent = @"驱动";
            NSMutableParagraphStyle* label30Style = [[NSMutableParagraphStyle alloc] init];
            label30Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label30FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label30Style};
            
            CGFloat label30TextHeight = [textContent boundingRectWithSize: CGSizeMake(label30Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label30FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label30Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label30Rect), CGRectGetMinY(label30Rect) + (label30Rect.size.height - label30TextHeight) / 2, label30Rect.size.width, label30TextHeight) withAttributes: label30FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 31 Drawing
        CGRect label31Rect = CGRectMake(640.34, 483, 10.95, 14);
        {
            NSString* textContent = @"IC";
            NSMutableParagraphStyle* label31Style = [[NSMutableParagraphStyle alloc] init];
            label31Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label31FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label31Style};
            
            CGFloat label31TextHeight = [textContent boundingRectWithSize: CGSizeMake(label31Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label31FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label31Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label31Rect), CGRectGetMinY(label31Rect) + (label31Rect.size.height - label31TextHeight) / 2, label31Rect.size.width, label31TextHeight) withAttributes: label31FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 42 Drawing
        UIBezierPath* rectangle42Path = [UIBezierPath bezierPathWithRect: CGRectMake(592, 300, 85, 34)];
        [fillColor setFill];
        [rectangle42Path fill];
        [strokeColor setStroke];
        rectangle42Path.lineWidth = 2;
        [rectangle42Path stroke];
        
        
        //// Label 32 Drawing
        CGRect label32Rect = CGRectMake(612.89, 311, 44.97, 14);
        {
            NSString* textContent = @"背光模组";
            NSMutableParagraphStyle* label32Style = [[NSMutableParagraphStyle alloc] init];
            label32Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label32FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label32Style};
            
            CGFloat label32TextHeight = [textContent boundingRectWithSize: CGSizeMake(label32Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label32FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label32Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label32Rect), CGRectGetMinY(label32Rect) + (label32Rect.size.height - label32TextHeight) / 2, label32Rect.size.width, label32TextHeight) withAttributes: label32FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
        [bezier3Path moveToPoint: CGPointMake(678, 224)];
        [bezier3Path addLineToPoint: CGPointMake(700.99, 224)];
        [bezier3Path addLineToPoint: CGPointMake(700.99, 211)];
        [bezier3Path addLineToPoint: CGPointMake(699.99, 212)];
        [bezier3Path addLineToPoint: CGPointMake(720, 212)];
        [bezier3Path addLineToPoint: CGPointMake(720, 210)];
        [bezier3Path addLineToPoint: CGPointMake(698.99, 210)];
        [bezier3Path addLineToPoint: CGPointMake(698.99, 223)];
        [bezier3Path addLineToPoint: CGPointMake(699.99, 222)];
        [bezier3Path addLineToPoint: CGPointMake(678, 222)];
        [bezier3Path addLineToPoint: CGPointMake(678, 224)];
        [bezier3Path closePath];
        [bezier3Path moveToPoint: CGPointMake(714.5, 215.36)];
        [bezier3Path addLineToPoint: CGPointMake(721.98, 211)];
        [bezier3Path addLineToPoint: CGPointMake(714.5, 206.64)];
        [bezier3Path addCurveToPoint: CGPointMake(713.13, 207) controlPoint1: CGPointMake(714.02, 206.36) controlPoint2: CGPointMake(713.41, 206.52)];
        [bezier3Path addCurveToPoint: CGPointMake(713.49, 208.36) controlPoint1: CGPointMake(712.86, 207.47) controlPoint2: CGPointMake(713.02, 208.09)];
        [bezier3Path addLineToPoint: CGPointMake(719.49, 211.86)];
        [bezier3Path addLineToPoint: CGPointMake(719.49, 210.14)];
        [bezier3Path addLineToPoint: CGPointMake(713.49, 213.64)];
        [bezier3Path addCurveToPoint: CGPointMake(713.13, 215) controlPoint1: CGPointMake(713.02, 213.91) controlPoint2: CGPointMake(712.86, 214.53)];
        [bezier3Path addCurveToPoint: CGPointMake(714.5, 215.36) controlPoint1: CGPointMake(713.41, 215.48) controlPoint2: CGPointMake(714.02, 215.64)];
        [bezier3Path closePath];
        [fillColor4 setFill];
        [bezier3Path fill];
        
        
        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
        [bezier4Path moveToPoint: CGPointMake(677, 136)];
        [bezier4Path addLineToPoint: CGPointMake(700.3, 136)];
        [bezier4Path addLineToPoint: CGPointMake(700.3, 210.51)];
        [bezier4Path addLineToPoint: CGPointMake(699.3, 209.51)];
        [bezier4Path addLineToPoint: CGPointMake(719.62, 209.51)];
        [bezier4Path addLineToPoint: CGPointMake(719.62, 211.51)];
        [bezier4Path addLineToPoint: CGPointMake(698.3, 211.51)];
        [bezier4Path addLineToPoint: CGPointMake(698.3, 137)];
        [bezier4Path addLineToPoint: CGPointMake(699.3, 138)];
        [bezier4Path addLineToPoint: CGPointMake(677, 138)];
        [bezier4Path addLineToPoint: CGPointMake(677, 136)];
        [bezier4Path closePath];
        [bezier4Path moveToPoint: CGPointMake(714.12, 206.15)];
        [bezier4Path addLineToPoint: CGPointMake(721.6, 210.51)];
        [bezier4Path addLineToPoint: CGPointMake(714.12, 214.87)];
        [bezier4Path addCurveToPoint: CGPointMake(712.75, 214.51) controlPoint1: CGPointMake(713.64, 215.15) controlPoint2: CGPointMake(713.03, 214.99)];
        [bezier4Path addCurveToPoint: CGPointMake(713.11, 213.15) controlPoint1: CGPointMake(712.47, 214.04) controlPoint2: CGPointMake(712.64, 213.42)];
        [bezier4Path addLineToPoint: CGPointMake(719.11, 209.65)];
        [bezier4Path addLineToPoint: CGPointMake(719.11, 211.37)];
        [bezier4Path addLineToPoint: CGPointMake(713.11, 207.87)];
        [bezier4Path addCurveToPoint: CGPointMake(712.75, 206.51) controlPoint1: CGPointMake(712.64, 207.59) controlPoint2: CGPointMake(712.47, 206.98)];
        [bezier4Path addCurveToPoint: CGPointMake(714.12, 206.15) controlPoint1: CGPointMake(713.03, 206.03) controlPoint2: CGPointMake(713.64, 205.87)];
        [bezier4Path closePath];
        [fillColor4 setFill];
        [bezier4Path fill];
        
        
        //// Rectangle 44 Drawing
        UIBezierPath* rectangle44Path = [UIBezierPath bezierPathWithRect: CGRectMake(878, 286, 85, 34)];
        [fillColor setFill];
        [rectangle44Path fill];
        [strokeColor setStroke];
        rectangle44Path.lineWidth = 2;
        [rectangle44Path stroke];
        
        
        //// Label 33 Drawing
        CGRect label33Rect = CGRectMake(898.83, 296, 44.97, 14);
        {
            NSString* textContent = @"智能平板";
            NSMutableParagraphStyle* label33Style = [[NSMutableParagraphStyle alloc] init];
            label33Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label33FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label33Style};
            
            CGFloat label33TextHeight = [textContent boundingRectWithSize: CGSizeMake(label33Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label33FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label33Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label33Rect), CGRectGetMinY(label33Rect) + (label33Rect.size.height - label33TextHeight) / 2, label33Rect.size.width, label33TextHeight) withAttributes: label33FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 46 Drawing
        UIBezierPath* rectangle46Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(847, 91, 148, 442) cornerRadius: 2.4];
        [strokeColor setStroke];
        rectangle46Path.lineWidth = 2;
        [rectangle46Path setLineDash: (CGFloat[]){76200, 25400} count: 2 phase: 0];
        [rectangle46Path stroke];
        
        
        //// Bezier 5 Drawing
        UIBezierPath* bezier5Path = [UIBezierPath bezierPath];
        [bezier5Path moveToPoint: CGPointMake(827, 588.36)];
        [bezier5Path addLineToPoint: CGPointMake(853.87, 588.36)];
        [bezier5Path addLineToPoint: CGPointMake(853.87, 303)];
        [bezier5Path addLineToPoint: CGPointMake(852.87, 304)];
        [bezier5Path addLineToPoint: CGPointMake(876.76, 304)];
        [bezier5Path addLineToPoint: CGPointMake(876.76, 302)];
        [bezier5Path addLineToPoint: CGPointMake(851.87, 302)];
        [bezier5Path addLineToPoint: CGPointMake(851.87, 587.36)];
        [bezier5Path addLineToPoint: CGPointMake(852.87, 586.36)];
        [bezier5Path addLineToPoint: CGPointMake(827, 586.36)];
        [bezier5Path addLineToPoint: CGPointMake(827, 588.36)];
        [bezier5Path closePath];
        [bezier5Path moveToPoint: CGPointMake(871.27, 307.36)];
        [bezier5Path addLineToPoint: CGPointMake(878.75, 303)];
        [bezier5Path addLineToPoint: CGPointMake(871.27, 298.64)];
        [bezier5Path addCurveToPoint: CGPointMake(869.9, 299) controlPoint1: CGPointMake(870.79, 298.36) controlPoint2: CGPointMake(870.18, 298.52)];
        [bezier5Path addCurveToPoint: CGPointMake(870.26, 300.36) controlPoint1: CGPointMake(869.62, 299.47) controlPoint2: CGPointMake(869.78, 300.09)];
        [bezier5Path addLineToPoint: CGPointMake(876.26, 303.86)];
        [bezier5Path addLineToPoint: CGPointMake(876.26, 302.14)];
        [bezier5Path addLineToPoint: CGPointMake(870.26, 305.64)];
        [bezier5Path addCurveToPoint: CGPointMake(869.9, 307) controlPoint1: CGPointMake(869.78, 305.91) controlPoint2: CGPointMake(869.62, 306.53)];
        [bezier5Path addCurveToPoint: CGPointMake(871.27, 307.36) controlPoint1: CGPointMake(870.18, 307.48) controlPoint2: CGPointMake(870.79, 307.64)];
        [bezier5Path closePath];
        [fillColor4 setFill];
        [bezier5Path fill];
        
        
        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = [UIBezierPath bezierPath];
        [bezier6Path moveToPoint: CGPointMake(417, 195)];
        [bezier6Path addLineToPoint: CGPointMake(441.48, 195)];
        [bezier6Path addLineToPoint: CGPointMake(441.48, 220.89)];
        [bezier6Path addLineToPoint: CGPointMake(440.48, 219.89)];
        [bezier6Path addLineToPoint: CGPointMake(461.98, 219.89)];
        [bezier6Path addLineToPoint: CGPointMake(461.98, 221.89)];
        [bezier6Path addLineToPoint: CGPointMake(439.48, 221.89)];
        [bezier6Path addLineToPoint: CGPointMake(439.48, 196)];
        [bezier6Path addLineToPoint: CGPointMake(440.48, 197)];
        [bezier6Path addLineToPoint: CGPointMake(417, 197)];
        [bezier6Path addLineToPoint: CGPointMake(417, 195)];
        [bezier6Path closePath];
        [bezier6Path moveToPoint: CGPointMake(456.48, 216.53)];
        [bezier6Path addLineToPoint: CGPointMake(463.97, 220.89)];
        [bezier6Path addLineToPoint: CGPointMake(456.48, 225.25)];
        [bezier6Path addCurveToPoint: CGPointMake(455.12, 224.89) controlPoint1: CGPointMake(456.01, 225.53) controlPoint2: CGPointMake(455.39, 225.37)];
        [bezier6Path addCurveToPoint: CGPointMake(455.48, 223.53) controlPoint1: CGPointMake(454.84, 224.42) controlPoint2: CGPointMake(455, 223.8)];
        [bezier6Path addLineToPoint: CGPointMake(461.48, 220.03)];
        [bezier6Path addLineToPoint: CGPointMake(461.48, 221.75)];
        [bezier6Path addLineToPoint: CGPointMake(455.48, 218.25)];
        [bezier6Path addCurveToPoint: CGPointMake(455.12, 216.89) controlPoint1: CGPointMake(455, 217.97) controlPoint2: CGPointMake(454.84, 217.36)];
        [bezier6Path addCurveToPoint: CGPointMake(456.48, 216.53) controlPoint1: CGPointMake(455.39, 216.41) controlPoint2: CGPointMake(456.01, 216.25)];
        [bezier6Path closePath];
        [fillColor4 setFill];
        [bezier6Path fill];
        
        
        //// Rectangle 47 Drawing
        UIBezierPath* rectangle47Path = [UIBezierPath bezierPathWithRect: CGRectMake(878, 465, 85, 34)];
        [fillColor setFill];
        [rectangle47Path fill];
        [strokeColor setStroke];
        rectangle47Path.lineWidth = 2;
        [rectangle47Path setLineDash: (CGFloat[]){76200, 25400} count: 2 phase: 0];
        [rectangle47Path stroke];
        
        
        //// Label 34 Drawing
        CGRect label34Rect = CGRectMake(893.33, 476, 56.21, 14);
        {
            NSString* textContent = @"笔记本电脑";
            NSMutableParagraphStyle* label34Style = [[NSMutableParagraphStyle alloc] init];
            label34Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label34FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label34Style};
            
            CGFloat label34TextHeight = [textContent boundingRectWithSize: CGSizeMake(label34Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label34FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label34Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label34Rect), CGRectGetMinY(label34Rect) + (label34Rect.size.height - label34TextHeight) / 2, label34Rect.size.width, label34TextHeight) withAttributes: label34FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 7 Drawing
        UIBezierPath* bezier7Path = [UIBezierPath bezierPath];
        [bezier7Path moveToPoint: CGPointMake(677, 409.71)];
        [bezier7Path addLineToPoint: CGPointMake(700.11, 409.71)];
        [bezier7Path addLineToPoint: CGPointMake(700.11, 211)];
        [bezier7Path addLineToPoint: CGPointMake(699.11, 212)];
        [bezier7Path addLineToPoint: CGPointMake(719.24, 212)];
        [bezier7Path addLineToPoint: CGPointMake(719.24, 210)];
        [bezier7Path addLineToPoint: CGPointMake(698.11, 210)];
        [bezier7Path addLineToPoint: CGPointMake(698.11, 408.71)];
        [bezier7Path addLineToPoint: CGPointMake(699.11, 407.71)];
        [bezier7Path addLineToPoint: CGPointMake(677, 407.71)];
        [bezier7Path addLineToPoint: CGPointMake(677, 409.71)];
        [bezier7Path closePath];
        [bezier7Path moveToPoint: CGPointMake(713.74, 215.36)];
        [bezier7Path addLineToPoint: CGPointMake(721.22, 211)];
        [bezier7Path addLineToPoint: CGPointMake(713.74, 206.64)];
        [bezier7Path addCurveToPoint: CGPointMake(712.37, 207) controlPoint1: CGPointMake(713.26, 206.36) controlPoint2: CGPointMake(712.65, 206.52)];
        [bezier7Path addCurveToPoint: CGPointMake(712.73, 208.36) controlPoint1: CGPointMake(712.1, 207.47) controlPoint2: CGPointMake(712.26, 208.09)];
        [bezier7Path addLineToPoint: CGPointMake(718.73, 211.86)];
        [bezier7Path addLineToPoint: CGPointMake(718.73, 210.14)];
        [bezier7Path addLineToPoint: CGPointMake(712.73, 213.64)];
        [bezier7Path addCurveToPoint: CGPointMake(712.37, 215) controlPoint1: CGPointMake(712.26, 213.91) controlPoint2: CGPointMake(712.1, 214.53)];
        [bezier7Path addCurveToPoint: CGPointMake(713.74, 215.36) controlPoint1: CGPointMake(712.65, 215.48) controlPoint2: CGPointMake(713.26, 215.64)];
        [bezier7Path closePath];
        [fillColor4 setFill];
        [bezier7Path fill];
        
        
        //// Rectangle 49 Drawing
        UIBezierPath* rectangle49Path = [UIBezierPath bezierPathWithRect: CGRectMake(880, 160, 86, 34)];
        [fillColor setFill];
        [rectangle49Path fill];
        [strokeColor setStroke];
        rectangle49Path.lineWidth = 2;
        [rectangle49Path stroke];
        
        
        //// Label 35 Drawing
        CGRect label35Rect = CGRectMake(900.85, 170, 44.97, 14);
        {
            NSString* textContent = @"智能手机";
            NSMutableParagraphStyle* label35Style = [[NSMutableParagraphStyle alloc] init];
            label35Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label35FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label35Style};
            
            CGFloat label35TextHeight = [textContent boundingRectWithSize: CGSizeMake(label35Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label35FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label35Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label35Rect), CGRectGetMinY(label35Rect) + (label35Rect.size.height - label35TextHeight) / 2, label35Rect.size.width, label35TextHeight) withAttributes: label35FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 8 Drawing
        UIBezierPath* bezier8Path = [UIBezierPath bezierPath];
        [bezier8Path moveToPoint: CGPointMake(827, 588.11)];
        [bezier8Path addLineToPoint: CGPointMake(854.64, 588.11)];
        [bezier8Path addLineToPoint: CGPointMake(854.64, 177)];
        [bezier8Path addLineToPoint: CGPointMake(853.64, 178)];
        [bezier8Path addLineToPoint: CGPointMake(878.31, 178)];
        [bezier8Path addLineToPoint: CGPointMake(878.31, 176)];
        [bezier8Path addLineToPoint: CGPointMake(852.64, 176)];
        [bezier8Path addLineToPoint: CGPointMake(852.64, 587.11)];
        [bezier8Path addLineToPoint: CGPointMake(853.64, 586.11)];
        [bezier8Path addLineToPoint: CGPointMake(827, 586.11)];
        [bezier8Path addLineToPoint: CGPointMake(827, 588.11)];
        [bezier8Path closePath];
        [bezier8Path moveToPoint: CGPointMake(872.81, 181.36)];
        [bezier8Path addLineToPoint: CGPointMake(880.29, 177)];
        [bezier8Path addLineToPoint: CGPointMake(872.81, 172.64)];
        [bezier8Path addCurveToPoint: CGPointMake(871.45, 173) controlPoint1: CGPointMake(872.34, 172.36) controlPoint2: CGPointMake(871.72, 172.52)];
        [bezier8Path addCurveToPoint: CGPointMake(871.81, 174.36) controlPoint1: CGPointMake(871.17, 173.47) controlPoint2: CGPointMake(871.33, 174.09)];
        [bezier8Path addLineToPoint: CGPointMake(877.81, 177.86)];
        [bezier8Path addLineToPoint: CGPointMake(877.81, 176.14)];
        [bezier8Path addLineToPoint: CGPointMake(871.81, 179.64)];
        [bezier8Path addCurveToPoint: CGPointMake(871.45, 181) controlPoint1: CGPointMake(871.33, 179.91) controlPoint2: CGPointMake(871.17, 180.53)];
        [bezier8Path addCurveToPoint: CGPointMake(872.81, 181.36) controlPoint1: CGPointMake(871.72, 181.48) controlPoint2: CGPointMake(872.34, 181.64)];
        [bezier8Path closePath];
        [fillColor4 setFill];
        [bezier8Path fill];
        
        
        //// Bezier 9 Drawing
        UIBezierPath* bezier9Path = [UIBezierPath bezierPath];
        [bezier9Path moveToPoint: CGPointMake(827, 587.66)];
        [bezier9Path addLineToPoint: CGPointMake(853.87, 587.66)];
        [bezier9Path addLineToPoint: CGPointMake(853.87, 482)];
        [bezier9Path addLineToPoint: CGPointMake(852.87, 483)];
        [bezier9Path addLineToPoint: CGPointMake(876.76, 483)];
        [bezier9Path addLineToPoint: CGPointMake(876.76, 481)];
        [bezier9Path addLineToPoint: CGPointMake(851.87, 481)];
        [bezier9Path addLineToPoint: CGPointMake(851.87, 586.66)];
        [bezier9Path addLineToPoint: CGPointMake(852.87, 585.66)];
        [bezier9Path addLineToPoint: CGPointMake(827, 585.66)];
        [bezier9Path addLineToPoint: CGPointMake(827, 587.66)];
        [bezier9Path closePath];
        [bezier9Path moveToPoint: CGPointMake(871.27, 486.36)];
        [bezier9Path addLineToPoint: CGPointMake(878.75, 482)];
        [bezier9Path addLineToPoint: CGPointMake(871.27, 477.64)];
        [bezier9Path addCurveToPoint: CGPointMake(869.9, 478) controlPoint1: CGPointMake(870.79, 477.36) controlPoint2: CGPointMake(870.18, 477.52)];
        [bezier9Path addCurveToPoint: CGPointMake(870.26, 479.36) controlPoint1: CGPointMake(869.62, 478.47) controlPoint2: CGPointMake(869.78, 479.09)];
        [bezier9Path addLineToPoint: CGPointMake(876.26, 482.86)];
        [bezier9Path addLineToPoint: CGPointMake(876.26, 481.14)];
        [bezier9Path addLineToPoint: CGPointMake(870.26, 484.64)];
        [bezier9Path addCurveToPoint: CGPointMake(869.9, 486) controlPoint1: CGPointMake(869.78, 484.91) controlPoint2: CGPointMake(869.62, 485.53)];
        [bezier9Path addCurveToPoint: CGPointMake(871.27, 486.36) controlPoint1: CGPointMake(870.18, 486.48) controlPoint2: CGPointMake(870.79, 486.64)];
        [bezier9Path closePath];
        [fillColor4 setFill];
        [bezier9Path fill];
        
        
        //// Bezier 10 Drawing
        UIBezierPath* bezier10Path = [UIBezierPath bezierPath];
        [bezier10Path moveToPoint: CGPointMake(677, 318.63)];
        [bezier10Path addLineToPoint: CGPointMake(700.11, 318.63)];
        [bezier10Path addLineToPoint: CGPointMake(700.11, 211)];
        [bezier10Path addLineToPoint: CGPointMake(699.11, 212)];
        [bezier10Path addLineToPoint: CGPointMake(719.24, 212)];
        [bezier10Path addLineToPoint: CGPointMake(719.24, 210)];
        [bezier10Path addLineToPoint: CGPointMake(698.11, 210)];
        [bezier10Path addLineToPoint: CGPointMake(698.11, 317.63)];
        [bezier10Path addLineToPoint: CGPointMake(699.11, 316.63)];
        [bezier10Path addLineToPoint: CGPointMake(677, 316.63)];
        [bezier10Path addLineToPoint: CGPointMake(677, 318.63)];
        [bezier10Path closePath];
        [bezier10Path moveToPoint: CGPointMake(713.74, 215.36)];
        [bezier10Path addLineToPoint: CGPointMake(721.22, 211)];
        [bezier10Path addLineToPoint: CGPointMake(713.74, 206.64)];
        [bezier10Path addCurveToPoint: CGPointMake(712.37, 207) controlPoint1: CGPointMake(713.26, 206.36) controlPoint2: CGPointMake(712.65, 206.52)];
        [bezier10Path addCurveToPoint: CGPointMake(712.73, 208.36) controlPoint1: CGPointMake(712.1, 207.47) controlPoint2: CGPointMake(712.26, 208.09)];
        [bezier10Path addLineToPoint: CGPointMake(718.73, 211.86)];
        [bezier10Path addLineToPoint: CGPointMake(718.73, 210.14)];
        [bezier10Path addLineToPoint: CGPointMake(712.73, 213.64)];
        [bezier10Path addCurveToPoint: CGPointMake(712.37, 215) controlPoint1: CGPointMake(712.26, 213.91) controlPoint2: CGPointMake(712.1, 214.53)];
        [bezier10Path addCurveToPoint: CGPointMake(713.74, 215.36) controlPoint1: CGPointMake(712.65, 215.48) controlPoint2: CGPointMake(713.26, 215.64)];
        [bezier10Path closePath];
        [fillColor4 setFill];
        [bezier10Path fill];
        
        
        //// Bezier 11 Drawing
        UIBezierPath* bezier11Path = [UIBezierPath bezierPath];
        [bezier11Path moveToPoint: CGPointMake(677, 491.16)];
        [bezier11Path addLineToPoint: CGPointMake(700.23, 491.16)];
        [bezier11Path addLineToPoint: CGPointMake(700.23, 211)];
        [bezier11Path addLineToPoint: CGPointMake(699.23, 212)];
        [bezier11Path addLineToPoint: CGPointMake(719.47, 212)];
        [bezier11Path addLineToPoint: CGPointMake(719.47, 210)];
        [bezier11Path addLineToPoint: CGPointMake(698.23, 210)];
        [bezier11Path addLineToPoint: CGPointMake(698.23, 490.16)];
        [bezier11Path addLineToPoint: CGPointMake(699.23, 489.16)];
        [bezier11Path addLineToPoint: CGPointMake(677, 489.16)];
        [bezier11Path addLineToPoint: CGPointMake(677, 491.16)];
        [bezier11Path closePath];
        [bezier11Path moveToPoint: CGPointMake(713.98, 215.36)];
        [bezier11Path addLineToPoint: CGPointMake(721.46, 211)];
        [bezier11Path addLineToPoint: CGPointMake(713.98, 206.64)];
        [bezier11Path addCurveToPoint: CGPointMake(712.61, 207) controlPoint1: CGPointMake(713.5, 206.36) controlPoint2: CGPointMake(712.89, 206.52)];
        [bezier11Path addCurveToPoint: CGPointMake(712.97, 208.36) controlPoint1: CGPointMake(712.33, 207.47) controlPoint2: CGPointMake(712.49, 208.09)];
        [bezier11Path addLineToPoint: CGPointMake(718.97, 211.86)];
        [bezier11Path addLineToPoint: CGPointMake(718.97, 210.14)];
        [bezier11Path addLineToPoint: CGPointMake(712.97, 213.64)];
        [bezier11Path addCurveToPoint: CGPointMake(712.61, 215) controlPoint1: CGPointMake(712.49, 213.91) controlPoint2: CGPointMake(712.33, 214.53)];
        [bezier11Path addCurveToPoint: CGPointMake(713.98, 215.36) controlPoint1: CGPointMake(712.89, 215.48) controlPoint2: CGPointMake(713.5, 215.64)];
        [bezier11Path closePath];
        [fillColor4 setFill];
        [bezier11Path fill];
        
        
        //// Rectangle 51 Drawing
        UIBezierPath* rectangle51Path = [UIBezierPath bezierPathWithRect: CGRectMake(332, 493, 85, 34)];
        [fillColor setFill];
        [rectangle51Path fill];
        [strokeColor setStroke];
        rectangle51Path.lineWidth = 2;
        [rectangle51Path stroke];
        
        
        //// Label 36 Drawing
        CGRect label36Rect = CGRectMake(352.96, 503, 44.97, 14);
        {
            NSString* textContent = @"芯片生产";
            NSMutableParagraphStyle* label36Style = [[NSMutableParagraphStyle alloc] init];
            label36Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label36FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label36Style};
            
            CGFloat label36TextHeight = [textContent boundingRectWithSize: CGSizeMake(label36Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label36FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label36Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label36Rect), CGRectGetMinY(label36Rect) + (label36Rect.size.height - label36TextHeight) / 2, label36Rect.size.width, label36TextHeight) withAttributes: label36FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 12 Drawing
        UIBezierPath* bezier12Path = [UIBezierPath bezierPath];
        [bezier12Path moveToPoint: CGPointMake(417, 511.1)];
        [bezier12Path addLineToPoint: CGPointMake(505.38, 511.1)];
        [bezier12Path addLineToPoint: CGPointMake(505.38, 490)];
        [bezier12Path addLineToPoint: CGPointMake(504.38, 491)];
        [bezier12Path addLineToPoint: CGPointMake(589.79, 491)];
        [bezier12Path addLineToPoint: CGPointMake(589.79, 489)];
        [bezier12Path addLineToPoint: CGPointMake(503.38, 489)];
        [bezier12Path addLineToPoint: CGPointMake(503.38, 510.1)];
        [bezier12Path addLineToPoint: CGPointMake(504.38, 509.1)];
        [bezier12Path addLineToPoint: CGPointMake(417, 509.1)];
        [bezier12Path addLineToPoint: CGPointMake(417, 511.1)];
        [bezier12Path closePath];
        [bezier12Path moveToPoint: CGPointMake(584.29, 494.36)];
        [bezier12Path addLineToPoint: CGPointMake(591.77, 490)];
        [bezier12Path addLineToPoint: CGPointMake(584.29, 485.64)];
        [bezier12Path addCurveToPoint: CGPointMake(582.92, 486) controlPoint1: CGPointMake(583.81, 485.36) controlPoint2: CGPointMake(583.2, 485.52)];
        [bezier12Path addCurveToPoint: CGPointMake(583.28, 487.36) controlPoint1: CGPointMake(582.64, 486.47) controlPoint2: CGPointMake(582.81, 487.09)];
        [bezier12Path addLineToPoint: CGPointMake(589.28, 490.86)];
        [bezier12Path addLineToPoint: CGPointMake(589.28, 489.14)];
        [bezier12Path addLineToPoint: CGPointMake(583.28, 492.64)];
        [bezier12Path addCurveToPoint: CGPointMake(582.92, 494) controlPoint1: CGPointMake(582.81, 492.91) controlPoint2: CGPointMake(582.64, 493.53)];
        [bezier12Path addCurveToPoint: CGPointMake(584.29, 494.36) controlPoint1: CGPointMake(583.2, 494.48) controlPoint2: CGPointMake(583.81, 494.64)];
        [bezier12Path closePath];
        [fillColor4 setFill];
        [bezier12Path fill];
        
        
        //// Rectangle 53 Drawing
        UIBezierPath* rectangle53Path = [UIBezierPath bezierPathWithRect: CGRectMake(62, 492, 85, 34)];
        [fillColor setFill];
        [rectangle53Path fill];
        [strokeColor setStroke];
        rectangle53Path.lineWidth = 2;
        [rectangle53Path stroke];
        
        
        //// Label 37 Drawing
        CGRect label37Rect = CGRectMake(82.59, 502, 44.97, 14);
        {
            NSString* textContent = @"芯片设计";
            NSMutableParagraphStyle* label37Style = [[NSMutableParagraphStyle alloc] init];
            label37Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label37FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label37Style};
            
            CGFloat label37TextHeight = [textContent boundingRectWithSize: CGSizeMake(label37Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label37FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label37Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label37Rect), CGRectGetMinY(label37Rect) + (label37Rect.size.height - label37TextHeight) / 2, label37Rect.size.width, label37TextHeight) withAttributes: label37FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 13 Drawing
        UIBezierPath* bezier13Path = [UIBezierPath bezierPath];
        [bezier13Path moveToPoint: CGPointMake(147, 508)];
        [bezier13Path addLineToPoint: CGPointMake(240.72, 508)];
        [bezier13Path addLineToPoint: CGPointMake(240.72, 509.98)];
        [bezier13Path addLineToPoint: CGPointMake(239.72, 508.98)];
        [bezier13Path addLineToPoint: CGPointMake(330.46, 508.98)];
        [bezier13Path addLineToPoint: CGPointMake(330.46, 510.98)];
        [bezier13Path addLineToPoint: CGPointMake(238.72, 510.98)];
        [bezier13Path addLineToPoint: CGPointMake(238.72, 509)];
        [bezier13Path addLineToPoint: CGPointMake(239.72, 510)];
        [bezier13Path addLineToPoint: CGPointMake(147, 510)];
        [bezier13Path addLineToPoint: CGPointMake(147, 508)];
        [bezier13Path closePath];
        [bezier13Path moveToPoint: CGPointMake(324.96, 505.62)];
        [bezier13Path addLineToPoint: CGPointMake(332.44, 509.98)];
        [bezier13Path addLineToPoint: CGPointMake(324.96, 514.34)];
        [bezier13Path addCurveToPoint: CGPointMake(323.59, 513.98) controlPoint1: CGPointMake(324.48, 514.62) controlPoint2: CGPointMake(323.87, 514.46)];
        [bezier13Path addCurveToPoint: CGPointMake(323.95, 512.62) controlPoint1: CGPointMake(323.32, 513.51) controlPoint2: CGPointMake(323.48, 512.89)];
        [bezier13Path addLineToPoint: CGPointMake(329.95, 509.12)];
        [bezier13Path addLineToPoint: CGPointMake(329.95, 510.84)];
        [bezier13Path addLineToPoint: CGPointMake(323.95, 507.34)];
        [bezier13Path addCurveToPoint: CGPointMake(323.59, 505.98) controlPoint1: CGPointMake(323.48, 507.06) controlPoint2: CGPointMake(323.32, 506.45)];
        [bezier13Path addCurveToPoint: CGPointMake(324.96, 505.62) controlPoint1: CGPointMake(323.87, 505.5) controlPoint2: CGPointMake(324.48, 505.34)];
        [bezier13Path closePath];
        [fillColor4 setFill];
        [bezier13Path fill];
        
        
        //// Rectangle 55 Drawing
        UIBezierPath* rectangle55Path = [UIBezierPath bezierPathWithRect: CGRectMake(332, 411, 85, 34)];
        [fillColor setFill];
        [rectangle55Path fill];
        [strokeColor setStroke];
        rectangle55Path.lineWidth = 2;
        [rectangle55Path stroke];
        
        
        //// Label 38 Drawing
        CGRect label38Rect = CGRectMake(358.46, 421, 38.54, 14);
        {
            NSString* textContent = @"PVA膜";
            NSMutableParagraphStyle* label38Style = [[NSMutableParagraphStyle alloc] init];
            label38Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label38FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label38Style};
            
            CGFloat label38TextHeight = [textContent boundingRectWithSize: CGSizeMake(label38Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label38FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label38Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label38Rect), CGRectGetMinY(label38Rect) + (label38Rect.size.height - label38TextHeight) / 2, label38Rect.size.width, label38TextHeight) withAttributes: label38FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 58 Drawing
        UIBezierPath* rectangle58Path = [UIBezierPath bezierPathWithRect: CGRectMake(332, 369, 85, 34)];
        [fillColor setFill];
        [rectangle58Path fill];
        [strokeColor setStroke];
        rectangle58Path.lineWidth = 2;
        [rectangle58Path stroke];
        
        
        //// Label 40 Drawing
        CGRect label40Rect = CGRectMake(358.77, 379, 33.23, 14);
        {
            NSString* textContent = @"TAC膜";
            NSMutableParagraphStyle* label40Style = [[NSMutableParagraphStyle alloc] init];
            label40Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label40FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label40Style};
            
            CGFloat label40TextHeight = [textContent boundingRectWithSize: CGSizeMake(label40Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label40FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label40Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label40Rect), CGRectGetMinY(label40Rect) + (label40Rect.size.height - label40TextHeight) / 2, label40Rect.size.width, label40TextHeight) withAttributes: label40FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 14 Drawing
        UIBezierPath* bezier14Path = [UIBezierPath bezierPath];
        [bezier14Path moveToPoint: CGPointMake(417, 428.34)];
        [bezier14Path addLineToPoint: CGPointMake(505.5, 428.34)];
        [bezier14Path addLineToPoint: CGPointMake(505.5, 408)];
        [bezier14Path addLineToPoint: CGPointMake(504.5, 409)];
        [bezier14Path addLineToPoint: CGPointMake(590.02, 409)];
        [bezier14Path addLineToPoint: CGPointMake(590.02, 407)];
        [bezier14Path addLineToPoint: CGPointMake(503.5, 407)];
        [bezier14Path addLineToPoint: CGPointMake(503.5, 427.34)];
        [bezier14Path addLineToPoint: CGPointMake(504.5, 426.34)];
        [bezier14Path addLineToPoint: CGPointMake(417, 426.34)];
        [bezier14Path addLineToPoint: CGPointMake(417, 428.34)];
        [bezier14Path closePath];
        [bezier14Path moveToPoint: CGPointMake(584.53, 412.36)];
        [bezier14Path addLineToPoint: CGPointMake(592.01, 408)];
        [bezier14Path addLineToPoint: CGPointMake(584.53, 403.64)];
        [bezier14Path addCurveToPoint: CGPointMake(583.16, 404) controlPoint1: CGPointMake(584.05, 403.36) controlPoint2: CGPointMake(583.44, 403.52)];
        [bezier14Path addCurveToPoint: CGPointMake(583.52, 405.36) controlPoint1: CGPointMake(582.88, 404.47) controlPoint2: CGPointMake(583.04, 405.09)];
        [bezier14Path addLineToPoint: CGPointMake(589.52, 408.86)];
        [bezier14Path addLineToPoint: CGPointMake(589.52, 407.14)];
        [bezier14Path addLineToPoint: CGPointMake(583.52, 410.64)];
        [bezier14Path addCurveToPoint: CGPointMake(583.16, 412) controlPoint1: CGPointMake(583.04, 410.91) controlPoint2: CGPointMake(582.88, 411.53)];
        [bezier14Path addCurveToPoint: CGPointMake(584.53, 412.36) controlPoint1: CGPointMake(583.44, 412.48) controlPoint2: CGPointMake(584.05, 412.64)];
        [bezier14Path closePath];
        [fillColor4 setFill];
        [bezier14Path fill];
        
        
        //// Bezier 15 Drawing
        UIBezierPath* bezier15Path = [UIBezierPath bezierPath];
        [bezier15Path moveToPoint: CGPointMake(417, 385)];
        [bezier15Path addLineToPoint: CGPointMake(505.5, 385)];
        [bezier15Path addLineToPoint: CGPointMake(505.5, 408.32)];
        [bezier15Path addLineToPoint: CGPointMake(504.5, 407.32)];
        [bezier15Path addLineToPoint: CGPointMake(590.02, 407.32)];
        [bezier15Path addLineToPoint: CGPointMake(590.02, 409.32)];
        [bezier15Path addLineToPoint: CGPointMake(503.5, 409.32)];
        [bezier15Path addLineToPoint: CGPointMake(503.5, 386)];
        [bezier15Path addLineToPoint: CGPointMake(504.5, 387)];
        [bezier15Path addLineToPoint: CGPointMake(417, 387)];
        [bezier15Path addLineToPoint: CGPointMake(417, 385)];
        [bezier15Path closePath];
        [bezier15Path moveToPoint: CGPointMake(584.53, 403.96)];
        [bezier15Path addLineToPoint: CGPointMake(592.01, 408.32)];
        [bezier15Path addLineToPoint: CGPointMake(584.53, 412.68)];
        [bezier15Path addCurveToPoint: CGPointMake(583.16, 412.32) controlPoint1: CGPointMake(584.05, 412.96) controlPoint2: CGPointMake(583.44, 412.8)];
        [bezier15Path addCurveToPoint: CGPointMake(583.52, 410.96) controlPoint1: CGPointMake(582.88, 411.85) controlPoint2: CGPointMake(583.04, 411.23)];
        [bezier15Path addLineToPoint: CGPointMake(589.52, 407.46)];
        [bezier15Path addLineToPoint: CGPointMake(589.52, 409.18)];
        [bezier15Path addLineToPoint: CGPointMake(583.52, 405.68)];
        [bezier15Path addCurveToPoint: CGPointMake(583.16, 404.32) controlPoint1: CGPointMake(583.04, 405.41) controlPoint2: CGPointMake(582.88, 404.79)];
        [bezier15Path addCurveToPoint: CGPointMake(584.53, 403.96) controlPoint1: CGPointMake(583.44, 403.84) controlPoint2: CGPointMake(584.05, 403.68)];
        [bezier15Path closePath];
        [fillColor4 setFill];
        [bezier15Path fill];
        
        
        //// Rectangle 61 Drawing
        UIBezierPath* rectangle61Path = [UIBezierPath bezierPathWithRect: CGRectMake(332, 452, 85, 34)];
        [fillColor setFill];
        [rectangle61Path fill];
        [strokeColor setStroke];
        rectangle61Path.lineWidth = 2;
        [rectangle61Path stroke];
        
        
        //// Label 42 Drawing
        CGRect label42Rect = CGRectMake(359, 462, 38, 14);
        {
            NSString* textContent = @"FPC";
            NSMutableParagraphStyle* label42Style = [[NSMutableParagraphStyle alloc] init];
            label42Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label42FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label42Style};
            
            CGFloat label42TextHeight = [textContent boundingRectWithSize: CGSizeMake(label42Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label42FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label42Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label42Rect), CGRectGetMinY(label42Rect) + (label42Rect.size.height - label42TextHeight) / 2, label42Rect.size.width, label42TextHeight) withAttributes: label42FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [bezier16Path moveToPoint: CGPointMake(417, 468)];
        [bezier16Path addLineToPoint: CGPointMake(505.38, 468)];
        [bezier16Path addLineToPoint: CGPointMake(505.38, 490.2)];
        [bezier16Path addLineToPoint: CGPointMake(504.38, 489.2)];
        [bezier16Path addLineToPoint: CGPointMake(589.79, 489.2)];
        [bezier16Path addLineToPoint: CGPointMake(589.79, 491.2)];
        [bezier16Path addLineToPoint: CGPointMake(503.38, 491.2)];
        [bezier16Path addLineToPoint: CGPointMake(503.38, 469)];
        [bezier16Path addLineToPoint: CGPointMake(504.38, 470)];
        [bezier16Path addLineToPoint: CGPointMake(417, 470)];
        [bezier16Path addLineToPoint: CGPointMake(417, 468)];
        [bezier16Path closePath];
        [bezier16Path moveToPoint: CGPointMake(584.29, 485.84)];
        [bezier16Path addLineToPoint: CGPointMake(591.77, 490.2)];
        [bezier16Path addLineToPoint: CGPointMake(584.29, 494.56)];
        [bezier16Path addCurveToPoint: CGPointMake(582.92, 494.21) controlPoint1: CGPointMake(583.81, 494.84) controlPoint2: CGPointMake(583.2, 494.68)];
        [bezier16Path addCurveToPoint: CGPointMake(583.28, 492.84) controlPoint1: CGPointMake(582.64, 493.73) controlPoint2: CGPointMake(582.81, 493.12)];
        [bezier16Path addLineToPoint: CGPointMake(589.28, 489.34)];
        [bezier16Path addLineToPoint: CGPointMake(589.28, 491.06)];
        [bezier16Path addLineToPoint: CGPointMake(583.28, 487.56)];
        [bezier16Path addCurveToPoint: CGPointMake(582.92, 486.2) controlPoint1: CGPointMake(582.81, 487.29) controlPoint2: CGPointMake(582.64, 486.67)];
        [bezier16Path addCurveToPoint: CGPointMake(584.29, 485.84) controlPoint1: CGPointMake(583.2, 485.72) controlPoint2: CGPointMake(583.81, 485.56)];
        [bezier16Path closePath];
        [fillColor4 setFill];
        [bezier16Path fill];
        
        
        //// Rectangle 63 Drawing
        UIBezierPath* rectangle63Path = [UIBezierPath bezierPathWithRect: CGRectMake(314, 285, 103, 34)];
        [fillColor setFill];
        [rectangle63Path fill];
        [strokeColor setStroke];
        rectangle63Path.lineWidth = 2;
        [rectangle63Path stroke];
        
        
        //// Label 43 Drawing
        CGRect label43Rect = CGRectMake(322.68, 286, 86.32, 33);
        {
            NSString* textContent = @"CCFL/AMOLED/发光二极管";
            NSMutableParagraphStyle* label43Style = [[NSMutableParagraphStyle alloc] init];
            label43Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label43FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label43Style};
            
            CGFloat label43TextHeight = [textContent boundingRectWithSize: CGSizeMake(label43Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label43FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label43Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label43Rect), CGRectGetMinY(label43Rect) + (label43Rect.size.height - label43TextHeight) / 2, label43Rect.size.width, label43TextHeight) withAttributes: label43FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 67 Drawing
        UIBezierPath* rectangle67Path = [UIBezierPath bezierPathWithRect: CGRectMake(332, 243, 85, 34)];
        [fillColor setFill];
        [rectangle67Path fill];
        [strokeColor setStroke];
        rectangle67Path.lineWidth = 2;
        [rectangle67Path stroke];
        
        
        //// Label 46 Drawing
        CGRect label46Rect = CGRectMake(358.46, 253, 33.73, 14);
        {
            NSString* textContent = @"导光板";
            NSMutableParagraphStyle* label46Style = [[NSMutableParagraphStyle alloc] init];
            label46Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label46FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label46Style};
            
            CGFloat label46TextHeight = [textContent boundingRectWithSize: CGSizeMake(label46Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label46FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label46Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label46Rect), CGRectGetMinY(label46Rect) + (label46Rect.size.height - label46TextHeight) / 2, label46Rect.size.width, label46TextHeight) withAttributes: label46FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [bezier17Path moveToPoint: CGPointMake(417, 259)];
        [bezier17Path addLineToPoint: CGPointMake(505.5, 259)];
        [bezier17Path addLineToPoint: CGPointMake(505.5, 317.17)];
        [bezier17Path addLineToPoint: CGPointMake(504.5, 316.17)];
        [bezier17Path addLineToPoint: CGPointMake(590.02, 316.17)];
        [bezier17Path addLineToPoint: CGPointMake(590.02, 318.17)];
        [bezier17Path addLineToPoint: CGPointMake(503.5, 318.17)];
        [bezier17Path addLineToPoint: CGPointMake(503.5, 260)];
        [bezier17Path addLineToPoint: CGPointMake(504.5, 261)];
        [bezier17Path addLineToPoint: CGPointMake(417, 261)];
        [bezier17Path addLineToPoint: CGPointMake(417, 259)];
        [bezier17Path closePath];
        [bezier17Path moveToPoint: CGPointMake(584.53, 312.81)];
        [bezier17Path addLineToPoint: CGPointMake(592.01, 317.17)];
        [bezier17Path addLineToPoint: CGPointMake(584.53, 321.54)];
        [bezier17Path addCurveToPoint: CGPointMake(583.16, 321.18) controlPoint1: CGPointMake(584.05, 321.81) controlPoint2: CGPointMake(583.44, 321.65)];
        [bezier17Path addCurveToPoint: CGPointMake(583.52, 319.81) controlPoint1: CGPointMake(582.88, 320.7) controlPoint2: CGPointMake(583.04, 320.09)];
        [bezier17Path addLineToPoint: CGPointMake(589.52, 316.31)];
        [bezier17Path addLineToPoint: CGPointMake(589.52, 318.04)];
        [bezier17Path addLineToPoint: CGPointMake(583.52, 314.54)];
        [bezier17Path addCurveToPoint: CGPointMake(583.16, 313.17) controlPoint1: CGPointMake(583.04, 314.26) controlPoint2: CGPointMake(582.88, 313.65)];
        [bezier17Path addCurveToPoint: CGPointMake(584.53, 312.81) controlPoint1: CGPointMake(583.44, 312.69) controlPoint2: CGPointMake(584.05, 312.53)];
        [bezier17Path closePath];
        [fillColor4 setFill];
        [bezier17Path fill];
        
        
        //// Rectangle 69 Drawing
        UIBezierPath* rectangle69Path = [UIBezierPath bezierPathWithRect: CGRectMake(332, 326, 85, 34)];
        [fillColor setFill];
        [rectangle69Path fill];
        [strokeColor setStroke];
        rectangle69Path.lineWidth = 2;
        [rectangle69Path stroke];
        
        
        //// Label 47 Drawing
        CGRect label47Rect = CGRectMake(352.96, 336, 44.97, 14);
        {
            NSString* textContent = @"光学薄膜";
            NSMutableParagraphStyle* label47Style = [[NSMutableParagraphStyle alloc] init];
            label47Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label47FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label47Style};
            
            CGFloat label47TextHeight = [textContent boundingRectWithSize: CGSizeMake(label47Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label47FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label47Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label47Rect), CGRectGetMinY(label47Rect) + (label47Rect.size.height - label47TextHeight) / 2, label47Rect.size.width, label47TextHeight) withAttributes: label47FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [bezier18Path moveToPoint: CGPointMake(417, 343.39)];
        [bezier18Path addLineToPoint: CGPointMake(505.5, 343.39)];
        [bezier18Path addLineToPoint: CGPointMake(505.5, 317)];
        [bezier18Path addLineToPoint: CGPointMake(504.5, 318)];
        [bezier18Path addLineToPoint: CGPointMake(590.02, 318)];
        [bezier18Path addLineToPoint: CGPointMake(590.02, 316)];
        [bezier18Path addLineToPoint: CGPointMake(503.5, 316)];
        [bezier18Path addLineToPoint: CGPointMake(503.5, 342.39)];
        [bezier18Path addLineToPoint: CGPointMake(504.5, 341.39)];
        [bezier18Path addLineToPoint: CGPointMake(417, 341.39)];
        [bezier18Path addLineToPoint: CGPointMake(417, 343.39)];
        [bezier18Path closePath];
        [bezier18Path moveToPoint: CGPointMake(584.53, 321.36)];
        [bezier18Path addLineToPoint: CGPointMake(592.01, 317)];
        [bezier18Path addLineToPoint: CGPointMake(584.53, 312.64)];
        [bezier18Path addCurveToPoint: CGPointMake(583.16, 313) controlPoint1: CGPointMake(584.05, 312.36) controlPoint2: CGPointMake(583.44, 312.52)];
        [bezier18Path addCurveToPoint: CGPointMake(583.52, 314.36) controlPoint1: CGPointMake(582.88, 313.47) controlPoint2: CGPointMake(583.04, 314.09)];
        [bezier18Path addLineToPoint: CGPointMake(589.52, 317.86)];
        [bezier18Path addLineToPoint: CGPointMake(589.52, 316.14)];
        [bezier18Path addLineToPoint: CGPointMake(583.52, 319.64)];
        [bezier18Path addCurveToPoint: CGPointMake(583.16, 321) controlPoint1: CGPointMake(583.04, 319.91) controlPoint2: CGPointMake(582.88, 320.53)];
        [bezier18Path addCurveToPoint: CGPointMake(584.53, 321.36) controlPoint1: CGPointMake(583.44, 321.48) controlPoint2: CGPointMake(584.05, 321.64)];
        [bezier18Path closePath];
        [fillColor4 setFill];
        [bezier18Path fill];
        
        
        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [bezier19Path moveToPoint: CGPointMake(417, 301)];
        [bezier19Path addLineToPoint: CGPointMake(505.5, 301)];
        [bezier19Path addLineToPoint: CGPointMake(505.5, 317.51)];
        [bezier19Path addLineToPoint: CGPointMake(504.5, 316.51)];
        [bezier19Path addLineToPoint: CGPointMake(590.02, 316.51)];
        [bezier19Path addLineToPoint: CGPointMake(590.02, 318.51)];
        [bezier19Path addLineToPoint: CGPointMake(503.5, 318.51)];
        [bezier19Path addLineToPoint: CGPointMake(503.5, 302)];
        [bezier19Path addLineToPoint: CGPointMake(504.5, 303)];
        [bezier19Path addLineToPoint: CGPointMake(417, 303)];
        [bezier19Path addLineToPoint: CGPointMake(417, 301)];
        [bezier19Path closePath];
        [bezier19Path moveToPoint: CGPointMake(584.53, 313.15)];
        [bezier19Path addLineToPoint: CGPointMake(592.01, 317.51)];
        [bezier19Path addLineToPoint: CGPointMake(584.53, 321.87)];
        [bezier19Path addCurveToPoint: CGPointMake(583.16, 321.51) controlPoint1: CGPointMake(584.05, 322.15) controlPoint2: CGPointMake(583.44, 321.99)];
        [bezier19Path addCurveToPoint: CGPointMake(583.52, 320.15) controlPoint1: CGPointMake(582.88, 321.04) controlPoint2: CGPointMake(583.04, 320.42)];
        [bezier19Path addLineToPoint: CGPointMake(589.52, 316.65)];
        [bezier19Path addLineToPoint: CGPointMake(589.52, 318.37)];
        [bezier19Path addLineToPoint: CGPointMake(583.52, 314.87)];
        [bezier19Path addCurveToPoint: CGPointMake(583.16, 313.5) controlPoint1: CGPointMake(583.04, 314.59) controlPoint2: CGPointMake(582.88, 313.98)];
        [bezier19Path addCurveToPoint: CGPointMake(584.53, 313.15) controlPoint1: CGPointMake(583.44, 313.03) controlPoint2: CGPointMake(584.05, 312.87)];
        [bezier19Path closePath];
        [fillColor4 setFill];
        [bezier19Path fill];
        
        
        //// Rectangle 71 Drawing
        UIBezierPath* rectangle71Path = [UIBezierPath bezierPathWithRect: CGRectMake(727, 101, 86, 34)];
        [fillColor setFill];
        [rectangle71Path fill];
        [strokeColor setStroke];
        rectangle71Path.lineWidth = 2;
        [rectangle71Path stroke];
        
        
        //// Label 48 Drawing
        CGRect label48Rect = CGRectMake(747.88, 112, 44.97, 14);
        {
            NSString* textContent = @"制造设备";
            NSMutableParagraphStyle* label48Style = [[NSMutableParagraphStyle alloc] init];
            label48Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label48FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label48Style};
            
            CGFloat label48TextHeight = [textContent boundingRectWithSize: CGSizeMake(label48Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label48FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label48Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label48Rect), CGRectGetMinY(label48Rect) + (label48Rect.size.height - label48TextHeight) / 2, label48Rect.size.width, label48TextHeight) withAttributes: label48FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [bezier20Path moveToPoint: CGPointMake(558, 550.83)];
        [bezier20Path addLineToPoint: CGPointMake(650.93, 550.83)];
        [bezier20Path addLineToPoint: CGPointMake(650.93, 545)];
        [bezier20Path addLineToPoint: CGPointMake(649.93, 546)];
        [bezier20Path addLineToPoint: CGPointMake(739.88, 546)];
        [bezier20Path addLineToPoint: CGPointMake(739.88, 544)];
        [bezier20Path addLineToPoint: CGPointMake(648.93, 544)];
        [bezier20Path addLineToPoint: CGPointMake(648.93, 549.83)];
        [bezier20Path addLineToPoint: CGPointMake(649.93, 548.83)];
        [bezier20Path addLineToPoint: CGPointMake(558, 548.83)];
        [bezier20Path addLineToPoint: CGPointMake(558, 550.83)];
        [bezier20Path closePath];
        [bezier20Path moveToPoint: CGPointMake(734.39, 549.36)];
        [bezier20Path addLineToPoint: CGPointMake(741.87, 545)];
        [bezier20Path addLineToPoint: CGPointMake(734.39, 540.64)];
        [bezier20Path addCurveToPoint: CGPointMake(733.02, 541) controlPoint1: CGPointMake(733.91, 540.36) controlPoint2: CGPointMake(733.3, 540.52)];
        [bezier20Path addCurveToPoint: CGPointMake(733.38, 542.36) controlPoint1: CGPointMake(732.74, 541.47) controlPoint2: CGPointMake(732.9, 542.09)];
        [bezier20Path addLineToPoint: CGPointMake(739.38, 545.86)];
        [bezier20Path addLineToPoint: CGPointMake(739.38, 544.14)];
        [bezier20Path addLineToPoint: CGPointMake(733.38, 547.64)];
        [bezier20Path addCurveToPoint: CGPointMake(733.02, 549) controlPoint1: CGPointMake(732.9, 547.91) controlPoint2: CGPointMake(732.74, 548.53)];
        [bezier20Path addCurveToPoint: CGPointMake(734.39, 549.36) controlPoint1: CGPointMake(733.3, 549.48) controlPoint2: CGPointMake(733.91, 549.64)];
        [bezier20Path closePath];
        [fillColor4 setFill];
        [bezier20Path fill];
        
        
        //// Rectangle 73 Drawing
        UIBezierPath* rectangle73Path = [UIBezierPath bezierPathWithRect: CGRectMake(214, 156, 85, 34)];
        [fillColor setFill];
        [rectangle73Path fill];
        [strokeColor setStroke];
        rectangle73Path.lineWidth = 2;
        [rectangle73Path stroke];
        
        
        //// Label 50 Drawing
        CGRect label50Rect = CGRectMake(233, 166, 46, 14);
        {
            NSString* textContent = @"CF基板";
            NSMutableParagraphStyle* label50Style = [[NSMutableParagraphStyle alloc] init];
            label50Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label50FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label50Style};
            
            CGFloat label50TextHeight = [textContent boundingRectWithSize: CGSizeMake(label50Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label50FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label50Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label50Rect), CGRectGetMinY(label50Rect) + (label50Rect.size.height - label50TextHeight) / 2, label50Rect.size.width, label50TextHeight) withAttributes: label50FontAttributes];
            CGContextRestoreGState(context);
            
        }
        
        
        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(299, 172)];
        [bezier21Path addLineToPoint: CGPointMake(316.59, 172)];
        [bezier21Path addLineToPoint: CGPointMake(316.59, 195.97)];
        [bezier21Path addLineToPoint: CGPointMake(315.59, 194.97)];
        [bezier21Path addLineToPoint: CGPointMake(330.2, 194.97)];
        [bezier21Path addLineToPoint: CGPointMake(330.2, 196.97)];
        [bezier21Path addLineToPoint: CGPointMake(314.59, 196.97)];
        [bezier21Path addLineToPoint: CGPointMake(314.59, 173)];
        [bezier21Path addLineToPoint: CGPointMake(315.59, 174)];
        [bezier21Path addLineToPoint: CGPointMake(299, 174)];
        [bezier21Path addLineToPoint: CGPointMake(299, 172)];
        [bezier21Path closePath];
        [bezier21Path moveToPoint: CGPointMake(324.71, 191.6)];
        [bezier21Path addLineToPoint: CGPointMake(332.19, 195.97)];
        [bezier21Path addLineToPoint: CGPointMake(324.71, 200.33)];
        [bezier21Path addCurveToPoint: CGPointMake(323.34, 199.97) controlPoint1: CGPointMake(324.23, 200.61) controlPoint2: CGPointMake(323.62, 200.45)];
        [bezier21Path addCurveToPoint: CGPointMake(323.7, 198.6) controlPoint1: CGPointMake(323.06, 199.49) controlPoint2: CGPointMake(323.22, 198.88)];
        [bezier21Path addLineToPoint: CGPointMake(329.7, 195.1)];
        [bezier21Path addLineToPoint: CGPointMake(329.7, 196.83)];
        [bezier21Path addLineToPoint: CGPointMake(323.7, 193.33)];
        [bezier21Path addCurveToPoint: CGPointMake(323.34, 191.96) controlPoint1: CGPointMake(323.22, 193.05) controlPoint2: CGPointMake(323.06, 192.44)];
        [bezier21Path addCurveToPoint: CGPointMake(324.71, 191.6) controlPoint1: CGPointMake(323.62, 191.49) controlPoint2: CGPointMake(324.23, 191.32)];
        [bezier21Path closePath];
        [fillColor4 setFill];
        [bezier21Path fill];
        
        
        //// Rectangle 76 Drawing
        UIBezierPath* rectangle76Path = [UIBezierPath bezierPathWithRect: CGRectMake(213, 198, 85, 34)];
        [fillColor setFill];
        [rectangle76Path fill];
        [strokeColor setStroke];
        rectangle76Path.lineWidth = 2;
        [rectangle76Path stroke];
        
        
        //// Label 52 Drawing
        CGRect label52Rect = CGRectMake(227, 208, 47.23, 14);
        {
            NSString* textContent = @"TF基板";
            NSMutableParagraphStyle* label52Style = [[NSMutableParagraphStyle alloc] init];
            label52Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label52FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label52Style};
            
            CGFloat label52TextHeight = [textContent boundingRectWithSize: CGSizeMake(label52Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label52FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label52Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label52Rect), CGRectGetMinY(label52Rect) + (label52Rect.size.height - label52TextHeight) / 2, label52Rect.size.width, label52TextHeight) withAttributes: label52FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 22 Drawing
        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(298, 216.03)];
        [bezier22Path addLineToPoint: CGPointMake(315.93, 216.03)];
        [bezier22Path addLineToPoint: CGPointMake(315.93, 196)];
        [bezier22Path addLineToPoint: CGPointMake(314.93, 197)];
        [bezier22Path addLineToPoint: CGPointMake(329.88, 197)];
        [bezier22Path addLineToPoint: CGPointMake(329.88, 195)];
        [bezier22Path addLineToPoint: CGPointMake(313.93, 195)];
        [bezier22Path addLineToPoint: CGPointMake(313.93, 215.03)];
        [bezier22Path addLineToPoint: CGPointMake(314.93, 214.03)];
        [bezier22Path addLineToPoint: CGPointMake(298, 214.03)];
        [bezier22Path addLineToPoint: CGPointMake(298, 216.03)];
        [bezier22Path closePath];
        [bezier22Path moveToPoint: CGPointMake(324.38, 200.36)];
        [bezier22Path addLineToPoint: CGPointMake(331.87, 196)];
        [bezier22Path addLineToPoint: CGPointMake(324.38, 191.64)];
        [bezier22Path addCurveToPoint: CGPointMake(323.02, 192) controlPoint1: CGPointMake(323.91, 191.36) controlPoint2: CGPointMake(323.29, 191.52)];
        [bezier22Path addCurveToPoint: CGPointMake(323.38, 193.36) controlPoint1: CGPointMake(322.74, 192.47) controlPoint2: CGPointMake(322.9, 193.09)];
        [bezier22Path addLineToPoint: CGPointMake(329.38, 196.86)];
        [bezier22Path addLineToPoint: CGPointMake(329.38, 195.14)];
        [bezier22Path addLineToPoint: CGPointMake(323.38, 198.64)];
        [bezier22Path addCurveToPoint: CGPointMake(323.02, 200) controlPoint1: CGPointMake(322.9, 198.91) controlPoint2: CGPointMake(322.74, 199.53)];
        [bezier22Path addCurveToPoint: CGPointMake(324.38, 200.36) controlPoint1: CGPointMake(323.29, 200.48) controlPoint2: CGPointMake(323.91, 200.64)];
        [bezier22Path closePath];
        [fillColor4 setFill];
        [bezier22Path fill];
        
        
        //// Rectangle 79 Drawing
        UIBezierPath* rectangle79Path = [UIBezierPath bezierPathWithRect: CGRectMake(742, 528, 86, 33)];
        [fillColor setFill];
        [rectangle79Path fill];
        [strokeColor setStroke];
        rectangle79Path.lineWidth = 2;
        [rectangle79Path stroke];
        
        
        //// Label 53 Drawing
        CGRect label53Rect = CGRectMake(758.01, 537, 61.99, 14);
        {
            NSString* textContent = @"CRT显示器";
            NSMutableParagraphStyle* label53Style = [[NSMutableParagraphStyle alloc] init];
            label53Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label53FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label53Style};
            
            CGFloat label53TextHeight = [textContent boundingRectWithSize: CGSizeMake(label53Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label53FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label53Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label53Rect), CGRectGetMinY(label53Rect) + (label53Rect.size.height - label53TextHeight) / 2, label53Rect.size.width, label53TextHeight) withAttributes: label53FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 82 Drawing
        UIBezierPath* rectangle82Path = [UIBezierPath bezierPathWithRect: CGRectMake(739, 611, 86, 34)];
        [fillColor setFill];
        [rectangle82Path fill];
        [strokeColor setStroke];
        rectangle82Path.lineWidth = 2;
        [rectangle82Path stroke];
        
        
        //// Label 55 Drawing
        CGRect label55Rect = CGRectMake(771.72, 621, 21.98, 14);
        {
            NSString* textContent = @"LCD";
            NSMutableParagraphStyle* label55Style = [[NSMutableParagraphStyle alloc] init];
            label55Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label55FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label55Style};
            
            CGFloat label55TextHeight = [textContent boundingRectWithSize: CGSizeMake(label55Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label55FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label55Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label55Rect), CGRectGetMinY(label55Rect) + (label55Rect.size.height - label55TextHeight) / 2, label55Rect.size.width, label55TextHeight) withAttributes: label55FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 23 Drawing
        UIBezierPath* bezier23Path = [UIBezierPath bezierPath];
        [bezier23Path moveToPoint: CGPointMake(770, 240)];
        [bezier23Path addLineToPoint: CGPointMake(770, 385.01)];
        [bezier23Path addLineToPoint: CGPointMake(785.31, 385.01)];
        [bezier23Path addLineToPoint: CGPointMake(784.31, 384.01)];
        [bezier23Path addLineToPoint: CGPointMake(784.31, 526.05)];
        [bezier23Path addLineToPoint: CGPointMake(786.31, 526.05)];
        [bezier23Path addLineToPoint: CGPointMake(786.31, 383.01)];
        [bezier23Path addLineToPoint: CGPointMake(771, 383.01)];
        [bezier23Path addLineToPoint: CGPointMake(772, 384.01)];
        [bezier23Path addLineToPoint: CGPointMake(772, 240)];
        [bezier23Path addLineToPoint: CGPointMake(770, 240)];
        [bezier23Path closePath];
        [bezier23Path moveToPoint: CGPointMake(780.95, 520.55)];
        [bezier23Path addLineToPoint: CGPointMake(785.31, 528.03)];
        [bezier23Path addLineToPoint: CGPointMake(789.68, 520.55)];
        [bezier23Path addCurveToPoint: CGPointMake(789.32, 519.19) controlPoint1: CGPointMake(789.95, 520.08) controlPoint2: CGPointMake(789.79, 519.46)];
        [bezier23Path addCurveToPoint: CGPointMake(787.95, 519.55) controlPoint1: CGPointMake(788.84, 518.91) controlPoint2: CGPointMake(788.23, 519.07)];
        [bezier23Path addLineToPoint: CGPointMake(784.45, 525.55)];
        [bezier23Path addLineToPoint: CGPointMake(786.18, 525.55)];
        [bezier23Path addLineToPoint: CGPointMake(782.68, 519.55)];
        [bezier23Path addCurveToPoint: CGPointMake(781.31, 519.19) controlPoint1: CGPointMake(782.4, 519.07) controlPoint2: CGPointMake(781.78, 518.91)];
        [bezier23Path addCurveToPoint: CGPointMake(780.95, 520.55) controlPoint1: CGPointMake(780.83, 519.46) controlPoint2: CGPointMake(780.67, 520.08)];
        [bezier23Path closePath];
        [fillColor4 setFill];
        [bezier23Path fill];
        
        
        //// Rectangle 84 Drawing
        UIBezierPath* rectangle84Path = [UIBezierPath bezierPathWithRect: CGRectMake(712, 270, 55, 34)];
        [fillColor setFill];
        [rectangle84Path fill];
        [strokeColor setStroke];
        rectangle84Path.lineWidth = 2;
        [rectangle84Path stroke];
        
        
        //// Label 56 Drawing
        CGRect label56Rect = CGRectMake(726.87, 280, 26.45, 14);
        {
            NSString* textContent = @"LTPS";
            NSMutableParagraphStyle* label56Style = [[NSMutableParagraphStyle alloc] init];
            label56Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label56FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label56Style};
            
            CGFloat label56TextHeight = [textContent boundingRectWithSize: CGSizeMake(label56Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label56FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label56Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label56Rect), CGRectGetMinY(label56Rect) + (label56Rect.size.height - label56TextHeight) / 2, label56Rect.size.width, label56TextHeight) withAttributes: label56FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 24 Drawing
        UIBezierPath* bezier24Path = [UIBezierPath bezierPath];
        [bezier24Path moveToPoint: CGPointMake(744.2, 268.44)];
        [bezier24Path addLineToPoint: CGPointMake(744.2, 252.72)];
        [bezier24Path addLineToPoint: CGPointMake(743, 252.72)];
        [bezier24Path addLineToPoint: CGPointMake(744, 253.72)];
        [bezier24Path addLineToPoint: CGPointMake(744, 240.98)];
        [bezier24Path addLineToPoint: CGPointMake(742, 240.98)];
        [bezier24Path addLineToPoint: CGPointMake(742, 254.72)];
        [bezier24Path addLineToPoint: CGPointMake(743.2, 254.72)];
        [bezier24Path addLineToPoint: CGPointMake(742.2, 253.72)];
        [bezier24Path addLineToPoint: CGPointMake(742.2, 268.44)];
        [bezier24Path addLineToPoint: CGPointMake(744.2, 268.44)];
        [bezier24Path closePath];
        [bezier24Path moveToPoint: CGPointMake(747.36, 246.48)];
        [bezier24Path addLineToPoint: CGPointMake(743, 239)];
        [bezier24Path addLineToPoint: CGPointMake(738.64, 246.48)];
        [bezier24Path addCurveToPoint: CGPointMake(739, 247.84) controlPoint1: CGPointMake(738.36, 246.95) controlPoint2: CGPointMake(738.52, 247.57)];
        [bezier24Path addCurveToPoint: CGPointMake(740.36, 247.48) controlPoint1: CGPointMake(739.47, 248.12) controlPoint2: CGPointMake(740.09, 247.96)];
        [bezier24Path addLineToPoint: CGPointMake(743.86, 241.48)];
        [bezier24Path addLineToPoint: CGPointMake(742.14, 241.48)];
        [bezier24Path addLineToPoint: CGPointMake(745.64, 247.48)];
        [bezier24Path addCurveToPoint: CGPointMake(747, 247.84) controlPoint1: CGPointMake(745.91, 247.96) controlPoint2: CGPointMake(746.53, 248.12)];
        [bezier24Path addCurveToPoint: CGPointMake(747.36, 246.48) controlPoint1: CGPointMake(747.48, 247.57) controlPoint2: CGPointMake(747.64, 246.95)];
        [bezier24Path closePath];
        [fillColor4 setFill];
        [bezier24Path fill];
        
        
        //// Rectangle 86 Drawing
        UIBezierPath* rectangle86Path = [UIBezierPath bezierPathWithRect: CGRectMake(741, 570, 86, 34)];
        [fillColor setFill];
        [rectangle86Path fill];
        [strokeColor setStroke];
        rectangle86Path.lineWidth = 2;
        [rectangle86Path stroke];
        
        
        //// Label 57 Drawing
        CGRect label57Rect = CGRectMake(756.11, 580, 56.21, 14);
        {
            NSString* textContent = @"激光显示器";
            NSMutableParagraphStyle* label57Style = [[NSMutableParagraphStyle alloc] init];
            label57Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label57FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label57Style};
            
            CGFloat label57TextHeight = [textContent boundingRectWithSize: CGSizeMake(label57Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label57FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label57Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label57Rect), CGRectGetMinY(label57Rect) + (label57Rect.size.height - label57TextHeight) / 2, label57Rect.size.width, label57TextHeight) withAttributes: label57FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 25 Drawing
        UIBezierPath* bezier25Path = [UIBezierPath bezierPath];
        [bezier25Path moveToPoint: CGPointMake(0, 0)];
        [bezier25Path addLineToPoint: CGPointMake(989, 0)];
        [bezier25Path addLineToPoint: CGPointMake(989, 35)];
        [bezier25Path addLineToPoint: CGPointMake(0, 35)];
        [bezier25Path addLineToPoint: CGPointMake(0, 0)];
        [bezier25Path closePath];
        [fillColor setFill];
        [bezier25Path fill];
        
        
        //// Label 58 Drawing
        CGRect label58Rect = CGRectMake(452.53, 9, 85.76, 16);
        {
            NSString* textContent = @"新型显示产业链";
            NSMutableParagraphStyle* label58Style = [[NSMutableParagraphStyle alloc] init];
            label58Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label58FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 12], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label58Style};
            
            CGFloat label58TextHeight = [textContent boundingRectWithSize: CGSizeMake(label58Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label58FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label58Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label58Rect), CGRectGetMinY(label58Rect) + (label58Rect.size.height - label58TextHeight) / 2, label58Rect.size.width, label58TextHeight) withAttributes: label58FontAttributes];
            CGContextRestoreGState(context);
            [_array1 addObject:[NSValue valueWithCGRect:CGRectMake(0, 0, 989, 35)]];
            [_array2 addObject:textContent];
        }
        
        
        //// Bezier 26 Drawing
        UIBezierPath* bezier26Path = [UIBezierPath bezierPath];
        [bezier26Path moveToPoint: CGPointMake(194.5, 47.5)];
        [bezier26Path addLineToPoint: CGPointMake(430.04, 47.5)];
        [bezier26Path addLineToPoint: CGPointMake(435.5, 62.5)];
        [bezier26Path addLineToPoint: CGPointMake(430.04, 77.5)];
        [bezier26Path addLineToPoint: CGPointMake(194.5, 77.5)];
        [bezier26Path addLineToPoint: CGPointMake(199.96, 62.5)];
        [bezier26Path addLineToPoint: CGPointMake(194.5, 47.5)];
        [bezier26Path closePath];
        [fillColor3 setFill];
        [bezier26Path fill];
        [strokeColor2 setStroke];
        bezier26Path.lineWidth = 1;
        bezier26Path.miterLimit = 0;
        [bezier26Path stroke];
        
        
        //// Label 59 Drawing
        CGRect label59Rect = CGRectMake(284.51, 54, 61.26, 16);
        {
            NSString* textContent = @"上游：材料";
            NSMutableParagraphStyle* label59Style = [[NSMutableParagraphStyle alloc] init];
            label59Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label59FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 12], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label59Style};
            
            CGFloat label59TextHeight = [textContent boundingRectWithSize: CGSizeMake(label59Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label59FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label59Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label59Rect), CGRectGetMinY(label59Rect) + (label59Rect.size.height - label59TextHeight) / 2, label59Rect.size.width, label59TextHeight) withAttributes: label59FontAttributes];
            CGContextRestoreGState(context);
            
        }
        
        
        //// Bezier 27 Drawing
        UIBezierPath* bezier27Path = [UIBezierPath bezierPath];
        [bezier27Path moveToPoint: CGPointMake(558, 116)];
        [bezier27Path addLineToPoint: CGPointMake(586, 137.5)];
        [bezier27Path addLineToPoint: CGPointMake(558, 159)];
        [bezier27Path addLineToPoint: CGPointMake(558, 116)];
        [bezier27Path closePath];
        [fillColor5 setFill];
        [bezier27Path fill];
        
        
        //// Bezier 28 Drawing
        UIBezierPath* bezier28Path = [UIBezierPath bezierPath];
        [bezier28Path moveToPoint: CGPointMake(558, 199)];
        [bezier28Path addLineToPoint: CGPointMake(585, 221)];
        [bezier28Path addLineToPoint: CGPointMake(558, 243)];
        [bezier28Path addLineToPoint: CGPointMake(558, 199)];
        [bezier28Path closePath];
        [fillColor5 setFill];
        [bezier28Path fill];
        
        
        //// Bezier 29 Drawing
        UIBezierPath* bezier29Path = [UIBezierPath bezierPath];
        [bezier29Path moveToPoint: CGPointMake(784.43, 141.04)];
        [bezier29Path addLineToPoint: CGPointMake(785.31, 158.71)];
        [bezier29Path addLineToPoint: CGPointMake(801.38, 157.91)];
        [bezier29Path addLineToPoint: CGPointMake(770.13, 177.18)];
        [bezier29Path addLineToPoint: CGPointMake(737.12, 161.11)];
        [bezier29Path addLineToPoint: CGPointMake(753.18, 160.31)];
        [bezier29Path addLineToPoint: CGPointMake(752.3, 142.64)];
        [bezier29Path addLineToPoint: CGPointMake(784.43, 141.04)];
        [bezier29Path closePath];
        [fillColor2 setFill];
        [bezier29Path fill];
        
        
        //// Bezier 30 Drawing
        UIBezierPath* bezier30Path = [UIBezierPath bezierPath];
        [bezier30Path moveToPoint: CGPointMake(451.5, 46.5)];
        [bezier30Path addLineToPoint: CGPointMake(826.49, 46.5)];
        [bezier30Path addLineToPoint: CGPointMake(832.5, 63)];
        [bezier30Path addLineToPoint: CGPointMake(826.49, 79.5)];
        [bezier30Path addLineToPoint: CGPointMake(451.5, 79.5)];
        [bezier30Path addLineToPoint: CGPointMake(457.51, 63)];
        [bezier30Path addLineToPoint: CGPointMake(451.5, 46.5)];
        [bezier30Path closePath];
        [fillColor3 setFill];
        [bezier30Path fill];
        [strokeColor2 setStroke];
        bezier30Path.lineWidth = 1;
        bezier30Path.miterLimit = 0;
        [bezier30Path stroke];
        
        
        //// Label 60 Drawing
        CGRect label60Rect = CGRectMake(611.56, 55, 61.26, 16);
        {
            NSString* textContent = @"中游：组装";
            NSMutableParagraphStyle* label60Style = [[NSMutableParagraphStyle alloc] init];
            label60Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label60FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 12], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label60Style};
            
            CGFloat label60TextHeight = [textContent boundingRectWithSize: CGSizeMake(label60Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label60FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label60Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label60Rect), CGRectGetMinY(label60Rect) + (label60Rect.size.height - label60TextHeight) / 2, label60Rect.size.width, label60TextHeight) withAttributes: label60FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 31 Drawing
        UIBezierPath* bezier31Path = [UIBezierPath bezierPath];
        [bezier31Path moveToPoint: CGPointMake(847.5, 50.5)];
        [bezier31Path addLineToPoint: CGPointMake(981.22, 50.5)];
        [bezier31Path addLineToPoint: CGPointMake(986.5, 65)];
        [bezier31Path addLineToPoint: CGPointMake(981.22, 79.5)];
        [bezier31Path addLineToPoint: CGPointMake(847.5, 79.5)];
        [bezier31Path addLineToPoint: CGPointMake(852.78, 65)];
        [bezier31Path addLineToPoint: CGPointMake(847.5, 50.5)];
        [bezier31Path closePath];
        [fillColor3 setFill];
        [bezier31Path fill];
        [strokeColor2 setStroke];
        bezier31Path.lineWidth = 1;
        bezier31Path.miterLimit = 0;
        [bezier31Path stroke];
        
        
        //// Label 61 Drawing
        CGRect label61Rect = CGRectMake(886.13, 55, 61.26, 16);
        {
            NSString* textContent = @"下游：产品";
            NSMutableParagraphStyle* label61Style = [[NSMutableParagraphStyle alloc] init];
            label61Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label61FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 12], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label61Style};
            
            CGFloat label61TextHeight = [textContent boundingRectWithSize: CGSizeMake(label61Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label61FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label61Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label61Rect), CGRectGetMinY(label61Rect) + (label61Rect.size.height - label61TextHeight) / 2, label61Rect.size.width, label61TextHeight) withAttributes: label61FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 32 Drawing
        UIBezierPath* bezier32Path = [UIBezierPath bezierPath];
        [bezier32Path moveToPoint: CGPointMake(0.5, 46.5)];
        [bezier32Path addLineToPoint: CGPointMake(181.86, 46.5)];
        [bezier32Path addLineToPoint: CGPointMake(187.5, 62)];
        [bezier32Path addLineToPoint: CGPointMake(181.86, 77.5)];
        [bezier32Path addLineToPoint: CGPointMake(0.5, 77.5)];
        [bezier32Path addLineToPoint: CGPointMake(6.14, 62)];
        [bezier32Path addLineToPoint: CGPointMake(0.5, 46.5)];
        [bezier32Path closePath];
        [fillColor3 setFill];
        [bezier32Path fill];
        [strokeColor2 setStroke];
        bezier32Path.lineWidth = 1;
        bezier32Path.miterLimit = 0;
        [bezier32Path stroke];
        
        
        //// Label 62 Drawing
        CGRect label62Rect = CGRectMake(81.46, 53, 24.5, 16);
        {
            NSString* textContent = @"设计";
            NSMutableParagraphStyle* label62Style = [[NSMutableParagraphStyle alloc] init];
            label62Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label62FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 12], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label62Style};
            
            CGFloat label62TextHeight = [textContent boundingRectWithSize: CGSizeMake(label62Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label62FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label62Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label62Rect), CGRectGetMinY(label62Rect) + (label62Rect.size.height - label62TextHeight) / 2, label62Rect.size.width, label62TextHeight) withAttributes: label62FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 93 Drawing
        UIBezierPath* rectangle93Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(1, 91, 184, 441) cornerRadius: 3];
        [strokeColor setStroke];
        rectangle93Path.lineWidth = 2;
        [rectangle93Path setLineDash: (CGFloat[]){76200, 25400} count: 2 phase: 0];
        [rectangle93Path stroke];
        
        
        //// Bezier 33 Drawing
        UIBezierPath* bezier33Path = [UIBezierPath bezierPath];
        [bezier33Path moveToPoint: CGPointMake(828, 545.54)];
        [bezier33Path addLineToPoint: CGPointMake(855.09, 545.54)];
        [bezier33Path addLineToPoint: CGPointMake(855.09, 177)];
        [bezier33Path addLineToPoint: CGPointMake(854.09, 178)];
        [bezier33Path addLineToPoint: CGPointMake(878.21, 178)];
        [bezier33Path addLineToPoint: CGPointMake(878.21, 176)];
        [bezier33Path addLineToPoint: CGPointMake(853.09, 176)];
        [bezier33Path addLineToPoint: CGPointMake(853.09, 544.54)];
        [bezier33Path addLineToPoint: CGPointMake(854.09, 543.54)];
        [bezier33Path addLineToPoint: CGPointMake(828, 543.54)];
        [bezier33Path addLineToPoint: CGPointMake(828, 545.54)];
        [bezier33Path closePath];
        [bezier33Path moveToPoint: CGPointMake(872.71, 181.36)];
        [bezier33Path addLineToPoint: CGPointMake(880.19, 177)];
        [bezier33Path addLineToPoint: CGPointMake(872.71, 172.64)];
        [bezier33Path addCurveToPoint: CGPointMake(871.34, 173) controlPoint1: CGPointMake(872.23, 172.36) controlPoint2: CGPointMake(871.62, 172.52)];
        [bezier33Path addCurveToPoint: CGPointMake(871.7, 174.36) controlPoint1: CGPointMake(871.06, 173.47) controlPoint2: CGPointMake(871.23, 174.09)];
        [bezier33Path addLineToPoint: CGPointMake(877.7, 177.86)];
        [bezier33Path addLineToPoint: CGPointMake(877.7, 176.14)];
        [bezier33Path addLineToPoint: CGPointMake(871.7, 179.64)];
        [bezier33Path addCurveToPoint: CGPointMake(871.34, 181) controlPoint1: CGPointMake(871.23, 179.91) controlPoint2: CGPointMake(871.06, 180.53)];
        [bezier33Path addCurveToPoint: CGPointMake(872.71, 181.36) controlPoint1: CGPointMake(871.62, 181.48) controlPoint2: CGPointMake(872.23, 181.64)];
        [bezier33Path closePath];
        [fillColor4 setFill];
        [bezier33Path fill];
        
        
        //// Bezier 34 Drawing
        UIBezierPath* bezier34Path = [UIBezierPath bezierPath];
        [bezier34Path moveToPoint: CGPointMake(828, 545.78)];
        [bezier34Path addLineToPoint: CGPointMake(854.32, 545.78)];
        [bezier34Path addLineToPoint: CGPointMake(854.32, 303)];
        [bezier34Path addLineToPoint: CGPointMake(853.32, 304)];
        [bezier34Path addLineToPoint: CGPointMake(876.66, 304)];
        [bezier34Path addLineToPoint: CGPointMake(876.66, 302)];
        [bezier34Path addLineToPoint: CGPointMake(852.32, 302)];
        [bezier34Path addLineToPoint: CGPointMake(852.32, 544.78)];
        [bezier34Path addLineToPoint: CGPointMake(853.32, 543.78)];
        [bezier34Path addLineToPoint: CGPointMake(828, 543.78)];
        [bezier34Path addLineToPoint: CGPointMake(828, 545.78)];
        [bezier34Path closePath];
        [bezier34Path moveToPoint: CGPointMake(871.16, 307.36)];
        [bezier34Path addLineToPoint: CGPointMake(878.64, 303)];
        [bezier34Path addLineToPoint: CGPointMake(871.16, 298.64)];
        [bezier34Path addCurveToPoint: CGPointMake(869.8, 299) controlPoint1: CGPointMake(870.69, 298.36) controlPoint2: CGPointMake(870.07, 298.52)];
        [bezier34Path addCurveToPoint: CGPointMake(870.16, 300.36) controlPoint1: CGPointMake(869.52, 299.47) controlPoint2: CGPointMake(869.68, 300.09)];
        [bezier34Path addLineToPoint: CGPointMake(876.16, 303.86)];
        [bezier34Path addLineToPoint: CGPointMake(876.16, 302.14)];
        [bezier34Path addLineToPoint: CGPointMake(870.16, 305.64)];
        [bezier34Path addCurveToPoint: CGPointMake(869.8, 307) controlPoint1: CGPointMake(869.68, 305.91) controlPoint2: CGPointMake(869.52, 306.53)];
        [bezier34Path addCurveToPoint: CGPointMake(871.16, 307.36) controlPoint1: CGPointMake(870.07, 307.48) controlPoint2: CGPointMake(870.69, 307.64)];
        [bezier34Path closePath];
        [fillColor4 setFill];
        [bezier34Path fill];
        
        
        //// Bezier 35 Drawing
        UIBezierPath* bezier35Path = [UIBezierPath bezierPath];
        [bezier35Path moveToPoint: CGPointMake(827, 587.66)];
        [bezier35Path addLineToPoint: CGPointMake(853.87, 587.66)];
        [bezier35Path addLineToPoint: CGPointMake(853.87, 482)];
        [bezier35Path addLineToPoint: CGPointMake(852.87, 483)];
        [bezier35Path addLineToPoint: CGPointMake(876.76, 483)];
        [bezier35Path addLineToPoint: CGPointMake(876.76, 481)];
        [bezier35Path addLineToPoint: CGPointMake(851.87, 481)];
        [bezier35Path addLineToPoint: CGPointMake(851.87, 586.66)];
        [bezier35Path addLineToPoint: CGPointMake(852.87, 585.66)];
        [bezier35Path addLineToPoint: CGPointMake(827, 585.66)];
        [bezier35Path addLineToPoint: CGPointMake(827, 587.66)];
        [bezier35Path closePath];
        [bezier35Path moveToPoint: CGPointMake(871.27, 486.36)];
        [bezier35Path addLineToPoint: CGPointMake(878.75, 482)];
        [bezier35Path addLineToPoint: CGPointMake(871.27, 477.64)];
        [bezier35Path addCurveToPoint: CGPointMake(869.9, 478) controlPoint1: CGPointMake(870.79, 477.36) controlPoint2: CGPointMake(870.18, 477.52)];
        [bezier35Path addCurveToPoint: CGPointMake(870.26, 479.36) controlPoint1: CGPointMake(869.62, 478.47) controlPoint2: CGPointMake(869.78, 479.09)];
        [bezier35Path addLineToPoint: CGPointMake(876.26, 482.86)];
        [bezier35Path addLineToPoint: CGPointMake(876.26, 481.14)];
        [bezier35Path addLineToPoint: CGPointMake(870.26, 484.64)];
        [bezier35Path addCurveToPoint: CGPointMake(869.9, 486) controlPoint1: CGPointMake(869.78, 484.91) controlPoint2: CGPointMake(869.62, 485.53)];
        [bezier35Path addCurveToPoint: CGPointMake(871.27, 486.36) controlPoint1: CGPointMake(870.18, 486.48) controlPoint2: CGPointMake(870.79, 486.64)];
        [bezier35Path closePath];
        [fillColor4 setFill];
        [bezier35Path fill];
        
        
        //// Bezier 36 Drawing
        UIBezierPath* bezier36Path = [UIBezierPath bezierPath];
        [bezier36Path moveToPoint: CGPointMake(825, 628.66)];
        [bezier36Path addLineToPoint: CGPointMake(852.47, 628.66)];
        [bezier36Path addLineToPoint: CGPointMake(852.47, 482)];
        [bezier36Path addLineToPoint: CGPointMake(851.47, 483)];
        [bezier36Path addLineToPoint: CGPointMake(875.96, 483)];
        [bezier36Path addLineToPoint: CGPointMake(875.96, 481)];
        [bezier36Path addLineToPoint: CGPointMake(850.47, 481)];
        [bezier36Path addLineToPoint: CGPointMake(850.47, 627.66)];
        [bezier36Path addLineToPoint: CGPointMake(851.47, 626.66)];
        [bezier36Path addLineToPoint: CGPointMake(825, 626.66)];
        [bezier36Path addLineToPoint: CGPointMake(825, 628.66)];
        [bezier36Path closePath];
        [bezier36Path moveToPoint: CGPointMake(870.46, 486.36)];
        [bezier36Path addLineToPoint: CGPointMake(877.94, 482)];
        [bezier36Path addLineToPoint: CGPointMake(870.46, 477.64)];
        [bezier36Path addCurveToPoint: CGPointMake(869.1, 478) controlPoint1: CGPointMake(869.99, 477.36) controlPoint2: CGPointMake(869.37, 477.52)];
        [bezier36Path addCurveToPoint: CGPointMake(869.46, 479.36) controlPoint1: CGPointMake(868.82, 478.47) controlPoint2: CGPointMake(868.98, 479.09)];
        [bezier36Path addLineToPoint: CGPointMake(875.46, 482.86)];
        [bezier36Path addLineToPoint: CGPointMake(875.46, 481.14)];
        [bezier36Path addLineToPoint: CGPointMake(869.46, 484.64)];
        [bezier36Path addCurveToPoint: CGPointMake(869.1, 486) controlPoint1: CGPointMake(868.98, 484.91) controlPoint2: CGPointMake(868.82, 485.53)];
        [bezier36Path addCurveToPoint: CGPointMake(870.46, 486.36) controlPoint1: CGPointMake(869.37, 486.48) controlPoint2: CGPointMake(869.99, 486.64)];
        [bezier36Path closePath];
        [fillColor4 setFill];
        [bezier36Path fill];
        
        
        //// Bezier 37 Drawing
        UIBezierPath* bezier37Path = [UIBezierPath bezierPath];
        [bezier37Path moveToPoint: CGPointMake(825, 629.35)];
        [bezier37Path addLineToPoint: CGPointMake(852.47, 629.35)];
        [bezier37Path addLineToPoint: CGPointMake(852.47, 303)];
        [bezier37Path addLineToPoint: CGPointMake(851.47, 304)];
        [bezier37Path addLineToPoint: CGPointMake(875.96, 304)];
        [bezier37Path addLineToPoint: CGPointMake(875.96, 302)];
        [bezier37Path addLineToPoint: CGPointMake(850.47, 302)];
        [bezier37Path addLineToPoint: CGPointMake(850.47, 628.35)];
        [bezier37Path addLineToPoint: CGPointMake(851.47, 627.35)];
        [bezier37Path addLineToPoint: CGPointMake(825, 627.35)];
        [bezier37Path addLineToPoint: CGPointMake(825, 629.35)];
        [bezier37Path closePath];
        [bezier37Path moveToPoint: CGPointMake(870.46, 307.36)];
        [bezier37Path addLineToPoint: CGPointMake(877.94, 303)];
        [bezier37Path addLineToPoint: CGPointMake(870.46, 298.64)];
        [bezier37Path addCurveToPoint: CGPointMake(869.1, 299) controlPoint1: CGPointMake(869.99, 298.36) controlPoint2: CGPointMake(869.37, 298.52)];
        [bezier37Path addCurveToPoint: CGPointMake(869.46, 300.36) controlPoint1: CGPointMake(868.82, 299.47) controlPoint2: CGPointMake(868.98, 300.09)];
        [bezier37Path addLineToPoint: CGPointMake(875.46, 303.86)];
        [bezier37Path addLineToPoint: CGPointMake(875.46, 302.14)];
        [bezier37Path addLineToPoint: CGPointMake(869.46, 305.64)];
        [bezier37Path addCurveToPoint: CGPointMake(869.1, 307) controlPoint1: CGPointMake(868.98, 305.91) controlPoint2: CGPointMake(868.82, 306.53)];
        [bezier37Path addCurveToPoint: CGPointMake(870.46, 307.36) controlPoint1: CGPointMake(869.37, 307.48) controlPoint2: CGPointMake(869.99, 307.64)];
        [bezier37Path closePath];
        [fillColor4 setFill];
        [bezier37Path fill];
        
        
        //// Bezier 38 Drawing
        UIBezierPath* bezier38Path = [UIBezierPath bezierPath];
        [bezier38Path moveToPoint: CGPointMake(825, 629.1)];
        [bezier38Path addLineToPoint: CGPointMake(853.24, 629.1)];
        [bezier38Path addLineToPoint: CGPointMake(853.24, 177)];
        [bezier38Path addLineToPoint: CGPointMake(852.24, 178)];
        [bezier38Path addLineToPoint: CGPointMake(877.51, 178)];
        [bezier38Path addLineToPoint: CGPointMake(877.51, 176)];
        [bezier38Path addLineToPoint: CGPointMake(851.24, 176)];
        [bezier38Path addLineToPoint: CGPointMake(851.24, 628.1)];
        [bezier38Path addLineToPoint: CGPointMake(852.24, 627.1)];
        [bezier38Path addLineToPoint: CGPointMake(825, 627.1)];
        [bezier38Path addLineToPoint: CGPointMake(825, 629.1)];
        [bezier38Path closePath];
        [bezier38Path moveToPoint: CGPointMake(872.01, 181.36)];
        [bezier38Path addLineToPoint: CGPointMake(879.49, 177)];
        [bezier38Path addLineToPoint: CGPointMake(872.01, 172.64)];
        [bezier38Path addCurveToPoint: CGPointMake(870.64, 173) controlPoint1: CGPointMake(871.53, 172.36) controlPoint2: CGPointMake(870.92, 172.52)];
        [bezier38Path addCurveToPoint: CGPointMake(871, 174.36) controlPoint1: CGPointMake(870.36, 173.47) controlPoint2: CGPointMake(870.53, 174.09)];
        [bezier38Path addLineToPoint: CGPointMake(877, 177.86)];
        [bezier38Path addLineToPoint: CGPointMake(877, 176.14)];
        [bezier38Path addLineToPoint: CGPointMake(871, 179.64)];
        [bezier38Path addCurveToPoint: CGPointMake(870.64, 181) controlPoint1: CGPointMake(870.53, 179.91) controlPoint2: CGPointMake(870.36, 180.53)];
        [bezier38Path addCurveToPoint: CGPointMake(872.01, 181.36) controlPoint1: CGPointMake(870.92, 181.48) controlPoint2: CGPointMake(871.53, 181.64)];
        [bezier38Path closePath];
        [fillColor4 setFill];
        [bezier38Path fill];
        
        
        //// Bezier 39 Drawing
        UIBezierPath* bezier39Path = [UIBezierPath bezierPath];
        [bezier39Path moveToPoint: CGPointMake(828, 545.09)];
        [bezier39Path addLineToPoint: CGPointMake(854.32, 545.09)];
        [bezier39Path addLineToPoint: CGPointMake(854.32, 482)];
        [bezier39Path addLineToPoint: CGPointMake(853.32, 483)];
        [bezier39Path addLineToPoint: CGPointMake(876.66, 483)];
        [bezier39Path addLineToPoint: CGPointMake(876.66, 481)];
        [bezier39Path addLineToPoint: CGPointMake(852.32, 481)];
        [bezier39Path addLineToPoint: CGPointMake(852.32, 544.09)];
        [bezier39Path addLineToPoint: CGPointMake(853.32, 543.09)];
        [bezier39Path addLineToPoint: CGPointMake(828, 543.09)];
        [bezier39Path addLineToPoint: CGPointMake(828, 545.09)];
        [bezier39Path closePath];
        [bezier39Path moveToPoint: CGPointMake(871.16, 486.36)];
        [bezier39Path addLineToPoint: CGPointMake(878.64, 482)];
        [bezier39Path addLineToPoint: CGPointMake(871.16, 477.64)];
        [bezier39Path addCurveToPoint: CGPointMake(869.8, 478) controlPoint1: CGPointMake(870.69, 477.36) controlPoint2: CGPointMake(870.07, 477.52)];
        [bezier39Path addCurveToPoint: CGPointMake(870.16, 479.36) controlPoint1: CGPointMake(869.52, 478.47) controlPoint2: CGPointMake(869.68, 479.09)];
        [bezier39Path addLineToPoint: CGPointMake(876.16, 482.86)];
        [bezier39Path addLineToPoint: CGPointMake(876.16, 481.14)];
        [bezier39Path addLineToPoint: CGPointMake(870.16, 484.64)];
        [bezier39Path addCurveToPoint: CGPointMake(869.8, 486) controlPoint1: CGPointMake(869.68, 484.91) controlPoint2: CGPointMake(869.52, 485.53)];
        [bezier39Path addCurveToPoint: CGPointMake(871.16, 486.36) controlPoint1: CGPointMake(870.07, 486.48) controlPoint2: CGPointMake(870.69, 486.64)];
        [bezier39Path closePath];
        [fillColor4 setFill];
        [bezier39Path fill];
        
        
        //// Rectangle 94 Drawing
        UIBezierPath* rectangle94Path = [UIBezierPath bezierPathWithRect: CGRectMake(472, 573, 86, 34)];
        [fillColor setFill];
        [rectangle94Path fill];
        [strokeColor setStroke];
        rectangle94Path.lineWidth = 2;
        [rectangle94Path setLineDash: (CGFloat[]){76200, 25400} count: 2 phase: 0];
        [rectangle94Path stroke];
        
        
        //// Label 63 Drawing
        CGRect label63Rect = CGRectMake(499.16, 583, 38.84, 14);
        {
            NSString* textContent = @"PCB板";
            NSMutableParagraphStyle* label63Style = [[NSMutableParagraphStyle alloc] init];
            label63Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label63FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label63Style};
            
            CGFloat label63TextHeight = [textContent boundingRectWithSize: CGSizeMake(label63Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label63FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label63Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label63Rect), CGRectGetMinY(label63Rect) + (label63Rect.size.height - label63TextHeight) / 2, label63Rect.size.width, label63TextHeight) withAttributes: label63FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 97 Drawing
        UIBezierPath* rectangle97Path = [UIBezierPath bezierPathWithRect: CGRectMake(472, 616, 86, 34)];
        [fillColor setFill];
        [rectangle97Path fill];
        [strokeColor setStroke];
        rectangle97Path.lineWidth = 2;
        [rectangle97Path stroke];
        
        
        //// Label 65 Drawing
        CGRect label65Rect = CGRectMake(487.66, 620, 56.21, 25);
        {
            NSString* textContent = @"各类薄膜及其他材料";
            NSMutableParagraphStyle* label65Style = [[NSMutableParagraphStyle alloc] init];
            label65Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label65FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label65Style};
            
            CGFloat label65TextHeight = [textContent boundingRectWithSize: CGSizeMake(label65Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label65FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label65Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label65Rect), CGRectGetMinY(label65Rect) + (label65Rect.size.height - label65TextHeight) / 2, label65Rect.size.width, label65TextHeight) withAttributes: label65FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Rectangle 100 Drawing
        UIBezierPath* rectangle100Path = [UIBezierPath bezierPathWithRect: CGRectMake(472, 532, 86, 34)];
        [fillColor setFill];
        [rectangle100Path fill];
        [strokeColor setStroke];
        rectangle100Path.lineWidth = 2;
        [rectangle100Path stroke];
        
        
        //// Label 67 Drawing
        CGRect label67Rect = CGRectMake(504.16, 543, 22.48, 14);
        {
            NSString* textContent = @"外框";
            NSMutableParagraphStyle* label67Style = [[NSMutableParagraphStyle alloc] init];
            label67Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label67FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 11], NSForegroundColorAttributeName: textForeground, NSParagraphStyleAttributeName: label67Style};
            
            CGFloat label67TextHeight = [textContent boundingRectWithSize: CGSizeMake(label67Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label67FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label67Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label67Rect), CGRectGetMinY(label67Rect) + (label67Rect.size.height - label67TextHeight) / 2, label67Rect.size.width, label67TextHeight) withAttributes: label67FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 40 Drawing
        UIBezierPath* bezier40Path = [UIBezierPath bezierPath];
        [bezier40Path moveToPoint: CGPointMake(558, 634.61)];
        [bezier40Path addLineToPoint: CGPointMake(650.93, 634.61)];
        [bezier40Path addLineToPoint: CGPointMake(650.93, 545)];
        [bezier40Path addLineToPoint: CGPointMake(649.93, 546)];
        [bezier40Path addLineToPoint: CGPointMake(739.88, 546)];
        [bezier40Path addLineToPoint: CGPointMake(739.88, 544)];
        [bezier40Path addLineToPoint: CGPointMake(648.93, 544)];
        [bezier40Path addLineToPoint: CGPointMake(648.93, 633.61)];
        [bezier40Path addLineToPoint: CGPointMake(649.93, 632.61)];
        [bezier40Path addLineToPoint: CGPointMake(558, 632.61)];
        [bezier40Path addLineToPoint: CGPointMake(558, 634.61)];
        [bezier40Path closePath];
        [bezier40Path moveToPoint: CGPointMake(734.39, 549.36)];
        [bezier40Path addLineToPoint: CGPointMake(741.87, 545)];
        [bezier40Path addLineToPoint: CGPointMake(734.39, 540.64)];
        [bezier40Path addCurveToPoint: CGPointMake(733.02, 541) controlPoint1: CGPointMake(733.91, 540.36) controlPoint2: CGPointMake(733.3, 540.52)];
        [bezier40Path addCurveToPoint: CGPointMake(733.38, 542.36) controlPoint1: CGPointMake(732.74, 541.47) controlPoint2: CGPointMake(732.9, 542.09)];
        [bezier40Path addLineToPoint: CGPointMake(739.38, 545.86)];
        [bezier40Path addLineToPoint: CGPointMake(739.38, 544.14)];
        [bezier40Path addLineToPoint: CGPointMake(733.38, 547.64)];
        [bezier40Path addCurveToPoint: CGPointMake(733.02, 549) controlPoint1: CGPointMake(732.9, 547.91) controlPoint2: CGPointMake(732.74, 548.53)];
        [bezier40Path addCurveToPoint: CGPointMake(734.39, 549.36) controlPoint1: CGPointMake(733.3, 549.48) controlPoint2: CGPointMake(733.91, 549.64)];
        [bezier40Path closePath];
        [fillColor4 setFill];
        [bezier40Path fill];
        
        
        //// Bezier 41 Drawing
        UIBezierPath* bezier41Path = [UIBezierPath bezierPath];
        [bezier41Path moveToPoint: CGPointMake(558, 591.48)];
        [bezier41Path addLineToPoint: CGPointMake(650.93, 591.48)];
        [bezier41Path addLineToPoint: CGPointMake(650.93, 545)];
        [bezier41Path addLineToPoint: CGPointMake(649.93, 546)];
        [bezier41Path addLineToPoint: CGPointMake(739.88, 546)];
        [bezier41Path addLineToPoint: CGPointMake(739.88, 544)];
        [bezier41Path addLineToPoint: CGPointMake(648.93, 544)];
        [bezier41Path addLineToPoint: CGPointMake(648.93, 590.48)];
        [bezier41Path addLineToPoint: CGPointMake(649.93, 589.48)];
        [bezier41Path addLineToPoint: CGPointMake(558, 589.48)];
        [bezier41Path addLineToPoint: CGPointMake(558, 591.48)];
        [bezier41Path closePath];
        [bezier41Path moveToPoint: CGPointMake(734.39, 549.36)];
        [bezier41Path addLineToPoint: CGPointMake(741.87, 545)];
        [bezier41Path addLineToPoint: CGPointMake(734.39, 540.64)];
        [bezier41Path addCurveToPoint: CGPointMake(733.02, 541) controlPoint1: CGPointMake(733.91, 540.36) controlPoint2: CGPointMake(733.3, 540.52)];
        [bezier41Path addCurveToPoint: CGPointMake(733.38, 542.36) controlPoint1: CGPointMake(732.74, 541.47) controlPoint2: CGPointMake(732.9, 542.09)];
        [bezier41Path addLineToPoint: CGPointMake(739.38, 545.86)];
        [bezier41Path addLineToPoint: CGPointMake(739.38, 544.14)];
        [bezier41Path addLineToPoint: CGPointMake(733.38, 547.64)];
        [bezier41Path addCurveToPoint: CGPointMake(733.02, 549) controlPoint1: CGPointMake(732.9, 547.91) controlPoint2: CGPointMake(732.74, 548.53)];
        [bezier41Path addCurveToPoint: CGPointMake(734.39, 549.36) controlPoint1: CGPointMake(733.3, 549.48) controlPoint2: CGPointMake(733.91, 549.64)];
        [bezier41Path closePath];
        [fillColor4 setFill];
        [bezier41Path fill];
        
        
        //// Bezier 42 Drawing
        UIBezierPath* bezier42Path = [UIBezierPath bezierPath];
        [bezier42Path moveToPoint: CGPointMake(558, 548)];
        [bezier42Path addLineToPoint: CGPointMake(650.2, 548)];
        [bezier42Path addLineToPoint: CGPointMake(650.2, 586.74)];
        [bezier42Path addLineToPoint: CGPointMake(649.2, 585.74)];
        [bezier42Path addLineToPoint: CGPointMake(738.43, 585.74)];
        [bezier42Path addLineToPoint: CGPointMake(738.43, 587.74)];
        [bezier42Path addLineToPoint: CGPointMake(648.2, 587.74)];
        [bezier42Path addLineToPoint: CGPointMake(648.2, 549)];
        [bezier42Path addLineToPoint: CGPointMake(649.2, 550)];
        [bezier42Path addLineToPoint: CGPointMake(558, 550)];
        [bezier42Path addLineToPoint: CGPointMake(558, 548)];
        [bezier42Path closePath];
        [bezier42Path moveToPoint: CGPointMake(732.93, 582.38)];
        [bezier42Path addLineToPoint: CGPointMake(740.41, 586.74)];
        [bezier42Path addLineToPoint: CGPointMake(732.93, 591.11)];
        [bezier42Path addCurveToPoint: CGPointMake(731.56, 590.75) controlPoint1: CGPointMake(732.45, 591.39) controlPoint2: CGPointMake(731.84, 591.22)];
        [bezier42Path addCurveToPoint: CGPointMake(731.92, 589.38) controlPoint1: CGPointMake(731.28, 590.27) controlPoint2: CGPointMake(731.44, 589.66)];
        [bezier42Path addLineToPoint: CGPointMake(737.92, 585.88)];
        [bezier42Path addLineToPoint: CGPointMake(737.92, 587.61)];
        [bezier42Path addLineToPoint: CGPointMake(731.92, 584.11)];
        [bezier42Path addCurveToPoint: CGPointMake(731.56, 582.74) controlPoint1: CGPointMake(731.44, 583.83) controlPoint2: CGPointMake(731.28, 583.22)];
        [bezier42Path addCurveToPoint: CGPointMake(732.93, 582.38) controlPoint1: CGPointMake(731.84, 582.26) controlPoint2: CGPointMake(732.45, 582.1)];
        [bezier42Path closePath];
        [fillColor4 setFill];
        [bezier42Path fill];
        
        
        //// Bezier 43 Drawing
        UIBezierPath* bezier43Path = [UIBezierPath bezierPath];
        [bezier43Path moveToPoint: CGPointMake(558, 634.03)];
        [bezier43Path addLineToPoint: CGPointMake(650.2, 634.03)];
        [bezier43Path addLineToPoint: CGPointMake(650.2, 587)];
        [bezier43Path addLineToPoint: CGPointMake(649.2, 588)];
        [bezier43Path addLineToPoint: CGPointMake(738.43, 588)];
        [bezier43Path addLineToPoint: CGPointMake(738.43, 586)];
        [bezier43Path addLineToPoint: CGPointMake(648.2, 586)];
        [bezier43Path addLineToPoint: CGPointMake(648.2, 633.03)];
        [bezier43Path addLineToPoint: CGPointMake(649.2, 632.03)];
        [bezier43Path addLineToPoint: CGPointMake(558, 632.03)];
        [bezier43Path addLineToPoint: CGPointMake(558, 634.03)];
        [bezier43Path closePath];
        [bezier43Path moveToPoint: CGPointMake(732.93, 591.36)];
        [bezier43Path addLineToPoint: CGPointMake(740.41, 587)];
        [bezier43Path addLineToPoint: CGPointMake(732.93, 582.64)];
        [bezier43Path addCurveToPoint: CGPointMake(731.56, 583) controlPoint1: CGPointMake(732.45, 582.36) controlPoint2: CGPointMake(731.84, 582.52)];
        [bezier43Path addCurveToPoint: CGPointMake(731.92, 584.36) controlPoint1: CGPointMake(731.28, 583.47) controlPoint2: CGPointMake(731.44, 584.09)];
        [bezier43Path addLineToPoint: CGPointMake(737.92, 587.86)];
        [bezier43Path addLineToPoint: CGPointMake(737.92, 586.14)];
        [bezier43Path addLineToPoint: CGPointMake(731.92, 589.64)];
        [bezier43Path addCurveToPoint: CGPointMake(731.56, 591) controlPoint1: CGPointMake(731.44, 589.91) controlPoint2: CGPointMake(731.28, 590.53)];
        [bezier43Path addCurveToPoint: CGPointMake(732.93, 591.36) controlPoint1: CGPointMake(731.84, 591.48) controlPoint2: CGPointMake(732.45, 591.64)];
        [bezier43Path closePath];
        [fillColor4 setFill];
        [bezier43Path fill];
        
        
        //// Bezier 44 Drawing
        UIBezierPath* bezier44Path = [UIBezierPath bezierPath];
        [bezier44Path moveToPoint: CGPointMake(558, 590.9)];
        [bezier44Path addLineToPoint: CGPointMake(650.2, 590.9)];
        [bezier44Path addLineToPoint: CGPointMake(650.2, 587)];
        [bezier44Path addLineToPoint: CGPointMake(649.2, 588)];
        [bezier44Path addLineToPoint: CGPointMake(738.43, 588)];
        [bezier44Path addLineToPoint: CGPointMake(738.43, 586)];
        [bezier44Path addLineToPoint: CGPointMake(648.2, 586)];
        [bezier44Path addLineToPoint: CGPointMake(648.2, 589.9)];
        [bezier44Path addLineToPoint: CGPointMake(649.2, 588.9)];
        [bezier44Path addLineToPoint: CGPointMake(558, 588.9)];
        [bezier44Path addLineToPoint: CGPointMake(558, 590.9)];
        [bezier44Path closePath];
        [bezier44Path moveToPoint: CGPointMake(732.93, 591.36)];
        [bezier44Path addLineToPoint: CGPointMake(740.41, 587)];
        [bezier44Path addLineToPoint: CGPointMake(732.93, 582.64)];
        [bezier44Path addCurveToPoint: CGPointMake(731.56, 583) controlPoint1: CGPointMake(732.45, 582.36) controlPoint2: CGPointMake(731.84, 582.52)];
        [bezier44Path addCurveToPoint: CGPointMake(731.92, 584.36) controlPoint1: CGPointMake(731.28, 583.47) controlPoint2: CGPointMake(731.44, 584.09)];
        [bezier44Path addLineToPoint: CGPointMake(737.92, 587.86)];
        [bezier44Path addLineToPoint: CGPointMake(737.92, 586.14)];
        [bezier44Path addLineToPoint: CGPointMake(731.92, 589.64)];
        [bezier44Path addCurveToPoint: CGPointMake(731.56, 591) controlPoint1: CGPointMake(731.44, 589.91) controlPoint2: CGPointMake(731.28, 590.53)];
        [bezier44Path addCurveToPoint: CGPointMake(732.93, 591.36) controlPoint1: CGPointMake(731.84, 591.48) controlPoint2: CGPointMake(732.45, 591.64)];
        [bezier44Path closePath];
        [fillColor4 setFill];
        [bezier44Path fill];
        
        
        //// Bezier 45 Drawing
        UIBezierPath* bezier45Path = [UIBezierPath bezierPath];
        [bezier45Path moveToPoint: CGPointMake(558, 548)];
        [bezier45Path addLineToPoint: CGPointMake(649.6, 548)];
        [bezier45Path addLineToPoint: CGPointMake(649.6, 627.74)];
        [bezier45Path addLineToPoint: CGPointMake(648.6, 626.74)];
        [bezier45Path addLineToPoint: CGPointMake(737.23, 626.74)];
        [bezier45Path addLineToPoint: CGPointMake(737.23, 628.74)];
        [bezier45Path addLineToPoint: CGPointMake(647.6, 628.74)];
        [bezier45Path addLineToPoint: CGPointMake(647.6, 549)];
        [bezier45Path addLineToPoint: CGPointMake(648.6, 550)];
        [bezier45Path addLineToPoint: CGPointMake(558, 550)];
        [bezier45Path addLineToPoint: CGPointMake(558, 548)];
        [bezier45Path closePath];
        [bezier45Path moveToPoint: CGPointMake(731.73, 623.37)];
        [bezier45Path addLineToPoint: CGPointMake(739.21, 627.74)];
        [bezier45Path addLineToPoint: CGPointMake(731.73, 632.1)];
        [bezier45Path addCurveToPoint: CGPointMake(730.36, 631.74) controlPoint1: CGPointMake(731.25, 632.38) controlPoint2: CGPointMake(730.64, 632.22)];
        [bezier45Path addCurveToPoint: CGPointMake(730.72, 630.37) controlPoint1: CGPointMake(730.09, 631.26) controlPoint2: CGPointMake(730.25, 630.65)];
        [bezier45Path addLineToPoint: CGPointMake(736.72, 626.87)];
        [bezier45Path addLineToPoint: CGPointMake(736.72, 628.6)];
        [bezier45Path addLineToPoint: CGPointMake(730.72, 625.1)];
        [bezier45Path addCurveToPoint: CGPointMake(730.36, 623.73) controlPoint1: CGPointMake(730.25, 624.82) controlPoint2: CGPointMake(730.09, 624.21)];
        [bezier45Path addCurveToPoint: CGPointMake(731.73, 623.37) controlPoint1: CGPointMake(730.64, 623.25) controlPoint2: CGPointMake(731.25, 623.09)];
        [bezier45Path closePath];
        [fillColor4 setFill];
        [bezier45Path fill];
        
        
        //// Bezier 46 Drawing
        UIBezierPath* bezier46Path = [UIBezierPath bezierPath];
        [bezier46Path moveToPoint: CGPointMake(558, 634.04)];
        [bezier46Path addLineToPoint: CGPointMake(649.6, 634.04)];
        [bezier46Path addLineToPoint: CGPointMake(649.6, 628)];
        [bezier46Path addLineToPoint: CGPointMake(648.6, 629)];
        [bezier46Path addLineToPoint: CGPointMake(737.23, 629)];
        [bezier46Path addLineToPoint: CGPointMake(737.23, 627)];
        [bezier46Path addLineToPoint: CGPointMake(647.6, 627)];
        [bezier46Path addLineToPoint: CGPointMake(647.6, 633.04)];
        [bezier46Path addLineToPoint: CGPointMake(648.6, 632.04)];
        [bezier46Path addLineToPoint: CGPointMake(558, 632.04)];
        [bezier46Path addLineToPoint: CGPointMake(558, 634.04)];
        [bezier46Path closePath];
        [bezier46Path moveToPoint: CGPointMake(731.73, 632.36)];
        [bezier46Path addLineToPoint: CGPointMake(739.21, 628)];
        [bezier46Path addLineToPoint: CGPointMake(731.73, 623.64)];
        [bezier46Path addCurveToPoint: CGPointMake(730.36, 624) controlPoint1: CGPointMake(731.25, 623.36) controlPoint2: CGPointMake(730.64, 623.52)];
        [bezier46Path addCurveToPoint: CGPointMake(730.72, 625.36) controlPoint1: CGPointMake(730.09, 624.47) controlPoint2: CGPointMake(730.25, 625.09)];
        [bezier46Path addLineToPoint: CGPointMake(736.72, 628.86)];
        [bezier46Path addLineToPoint: CGPointMake(736.72, 627.14)];
        [bezier46Path addLineToPoint: CGPointMake(730.72, 630.64)];
        [bezier46Path addCurveToPoint: CGPointMake(730.36, 632) controlPoint1: CGPointMake(730.25, 630.91) controlPoint2: CGPointMake(730.09, 631.53)];
        [bezier46Path addCurveToPoint: CGPointMake(731.73, 632.36) controlPoint1: CGPointMake(730.64, 632.48) controlPoint2: CGPointMake(731.25, 632.64)];
        [bezier46Path closePath];
        [fillColor4 setFill];
        [bezier46Path fill];
        
        
        //// Bezier 47 Drawing
        UIBezierPath* bezier47Path = [UIBezierPath bezierPath];
        [bezier47Path moveToPoint: CGPointMake(558, 589)];
        [bezier47Path addLineToPoint: CGPointMake(649.6, 589)];
        [bezier47Path addLineToPoint: CGPointMake(649.6, 628.09)];
        [bezier47Path addLineToPoint: CGPointMake(648.6, 627.09)];
        [bezier47Path addLineToPoint: CGPointMake(737.23, 627.09)];
        [bezier47Path addLineToPoint: CGPointMake(737.23, 629.09)];
        [bezier47Path addLineToPoint: CGPointMake(647.6, 629.09)];
        [bezier47Path addLineToPoint: CGPointMake(647.6, 590)];
        [bezier47Path addLineToPoint: CGPointMake(648.6, 591)];
        [bezier47Path addLineToPoint: CGPointMake(558, 591)];
        [bezier47Path addLineToPoint: CGPointMake(558, 589)];
        [bezier47Path closePath];
        [bezier47Path moveToPoint: CGPointMake(731.73, 623.73)];
        [bezier47Path addLineToPoint: CGPointMake(739.21, 628.09)];
        [bezier47Path addLineToPoint: CGPointMake(731.73, 632.45)];
        [bezier47Path addCurveToPoint: CGPointMake(730.36, 632.09) controlPoint1: CGPointMake(731.25, 632.73) controlPoint2: CGPointMake(730.64, 632.57)];
        [bezier47Path addCurveToPoint: CGPointMake(730.72, 630.73) controlPoint1: CGPointMake(730.09, 631.62) controlPoint2: CGPointMake(730.25, 631.01)];
        [bezier47Path addLineToPoint: CGPointMake(736.72, 627.23)];
        [bezier47Path addLineToPoint: CGPointMake(736.72, 628.95)];
        [bezier47Path addLineToPoint: CGPointMake(730.72, 625.45)];
        [bezier47Path addCurveToPoint: CGPointMake(730.36, 624.09) controlPoint1: CGPointMake(730.25, 625.18) controlPoint2: CGPointMake(730.09, 624.56)];
        [bezier47Path addCurveToPoint: CGPointMake(731.73, 623.73) controlPoint1: CGPointMake(730.64, 623.61) controlPoint2: CGPointMake(731.25, 623.45)];
        [bezier47Path closePath];
        [fillColor4 setFill];
        [bezier47Path fill];
        
        
        //// Label 68 Drawing
        CGRect label68Rect = CGRectMake(1002.88, 17, 73.37, 22);
        {
            NSString* textContent = @"研究员：";
            NSMutableParagraphStyle* label68Style = [[NSMutableParagraphStyle alloc] init];
            label68Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label68FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 18], NSForegroundColorAttributeName: textForeground2, NSParagraphStyleAttributeName: label68Style};
            
            CGFloat label68TextHeight = [textContent boundingRectWithSize: CGSizeMake(label68Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label68FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label68Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label68Rect), CGRectGetMinY(label68Rect) + (label68Rect.size.height - label68TextHeight) / 2, label68Rect.size.width, label68TextHeight) withAttributes: label68FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Label 69 Drawing
        CGRect label69Rect = CGRectMake(1002.88, 38, 55.03, 22);
        {
            NSString* textContent = @"魏哲浩";
            NSMutableParagraphStyle* label69Style = [[NSMutableParagraphStyle alloc] init];
            label69Style.alignment = NSTextAlignmentCenter;
            NSDictionary* label69FontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue" size: 18], NSForegroundColorAttributeName: textForeground2, NSParagraphStyleAttributeName: label69Style};
            
            CGFloat label69TextHeight = [textContent boundingRectWithSize: CGSizeMake(label69Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: label69FontAttributes context: nil].size.height;
            CGContextSaveGState(context);
            CGContextClipToRect(context, label69Rect);
            [textContent drawInRect: CGRectMake(CGRectGetMinX(label69Rect), CGRectGetMinY(label69Rect) + (label69Rect.size.height - label69TextHeight) / 2, label69Rect.size.width, label69TextHeight) withAttributes: label69FontAttributes];
            CGContextRestoreGState(context);
        }
        
        
        //// Bezier 48 Drawing
        UIBezierPath* bezier48Path = [UIBezierPath bezierPath];
        [bezier48Path moveToPoint: CGPointMake(770, 240)];
        [bezier48Path addLineToPoint: CGPointMake(770, 406.3)];
        [bezier48Path addLineToPoint: CGPointMake(784.03, 406.3)];
        [bezier48Path addLineToPoint: CGPointMake(783.03, 405.3)];
        [bezier48Path addLineToPoint: CGPointMake(783.03, 568.62)];
        [bezier48Path addLineToPoint: CGPointMake(785.03, 568.62)];
        [bezier48Path addLineToPoint: CGPointMake(785.03, 404.3)];
        [bezier48Path addLineToPoint: CGPointMake(771, 404.3)];
        [bezier48Path addLineToPoint: CGPointMake(772, 405.3)];
        [bezier48Path addLineToPoint: CGPointMake(772, 240)];
        [bezier48Path addLineToPoint: CGPointMake(770, 240)];
        [bezier48Path closePath];
        [bezier48Path moveToPoint: CGPointMake(779.67, 563.13)];
        [bezier48Path addLineToPoint: CGPointMake(784.03, 570.61)];
        [bezier48Path addLineToPoint: CGPointMake(788.39, 563.13)];
        [bezier48Path addCurveToPoint: CGPointMake(788.03, 561.76) controlPoint1: CGPointMake(788.67, 562.65) controlPoint2: CGPointMake(788.51, 562.04)];
        [bezier48Path addCurveToPoint: CGPointMake(786.67, 562.12) controlPoint1: CGPointMake(787.56, 561.48) controlPoint2: CGPointMake(786.95, 561.64)];
        [bezier48Path addLineToPoint: CGPointMake(783.17, 568.12)];
        [bezier48Path addLineToPoint: CGPointMake(784.89, 568.12)];
        [bezier48Path addLineToPoint: CGPointMake(781.39, 562.12)];
        [bezier48Path addCurveToPoint: CGPointMake(780.03, 561.76) controlPoint1: CGPointMake(781.12, 561.64) controlPoint2: CGPointMake(780.5, 561.48)];
        [bezier48Path addCurveToPoint: CGPointMake(779.67, 563.13) controlPoint1: CGPointMake(779.55, 562.04) controlPoint2: CGPointMake(779.39, 562.65)];
        [bezier48Path closePath];
        [fillColor4 setFill];
        [bezier48Path fill];
        
        
        //// Bezier 49 Drawing
        UIBezierPath* bezier49Path = [UIBezierPath bezierPath];
        [bezier49Path moveToPoint: CGPointMake(770, 247)];
        [bezier49Path addLineToPoint: CGPointMake(770, 433.8)];
        [bezier49Path addLineToPoint: CGPointMake(782.83, 433.8)];
        [bezier49Path addLineToPoint: CGPointMake(781.83, 432.8)];
        [bezier49Path addLineToPoint: CGPointMake(781.83, 616.62)];
        [bezier49Path addLineToPoint: CGPointMake(783.83, 616.62)];
        [bezier49Path addLineToPoint: CGPointMake(783.83, 431.8)];
        [bezier49Path addLineToPoint: CGPointMake(771, 431.8)];
        [bezier49Path addLineToPoint: CGPointMake(772, 432.8)];
        [bezier49Path addLineToPoint: CGPointMake(772, 247)];
        [bezier49Path addLineToPoint: CGPointMake(770, 247)];
        [bezier49Path closePath];
        [bezier49Path moveToPoint: CGPointMake(778.47, 611.12)];
        [bezier49Path addLineToPoint: CGPointMake(782.83, 618.6)];
        [bezier49Path addLineToPoint: CGPointMake(787.2, 611.12)];
        [bezier49Path addCurveToPoint: CGPointMake(786.84, 609.75) controlPoint1: CGPointMake(787.48, 610.64) controlPoint2: CGPointMake(787.31, 610.03)];
        [bezier49Path addCurveToPoint: CGPointMake(785.47, 610.11) controlPoint1: CGPointMake(786.36, 609.47) controlPoint2: CGPointMake(785.75, 609.63)];
        [bezier49Path addLineToPoint: CGPointMake(781.97, 616.11)];
        [bezier49Path addLineToPoint: CGPointMake(783.7, 616.11)];
        [bezier49Path addLineToPoint: CGPointMake(780.2, 610.11)];
        [bezier49Path addCurveToPoint: CGPointMake(778.83, 609.75) controlPoint1: CGPointMake(779.92, 609.63) controlPoint2: CGPointMake(779.31, 609.47)];
        [bezier49Path addCurveToPoint: CGPointMake(778.47, 611.12) controlPoint1: CGPointMake(778.35, 610.03) controlPoint2: CGPointMake(778.19, 610.64)];
        [bezier49Path closePath];
        [fillColor4 setFill];
        [bezier49Path fill];
    }



}
@end
